/* The following code was generated by JFlex 1.4.3 on 28/05/23 11:06 PM */

package analizadores;

import static analizadores.Tokens.*;


/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.4.3
 * on 28/05/23 11:06 PM from the specification file
 * <tt>C:/Users/audyc/Documents/NetBeansProjects/ProyectoTraductor/src/analizadores/Lexer.flex</tt>
 */
class Lexer {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0, 0
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\0\1\3\1\4\2\0\1\3\22\0\1\66\1\73\5\0\1\32"+
    "\1\75\1\76\2\0\1\3\1\0\1\72\1\0\12\2\1\67\4\0"+
    "\1\74\1\0\1\27\1\50\1\46\1\42\1\20\1\41\1\45\1\15"+
    "\1\5\1\1\1\53\1\40\1\33\1\57\1\13\1\54\1\70\1\35"+
    "\1\21\1\24\1\14\1\61\1\25\1\65\1\7\1\63\1\77\1\0"+
    "\1\100\1\0\1\1\1\0\1\31\1\52\1\47\1\44\1\16\1\37"+
    "\1\43\1\17\1\6\1\1\1\51\1\36\1\30\1\55\1\10\1\56"+
    "\1\71\1\34\1\22\1\23\1\11\1\60\1\26\1\64\1\12\1\62"+
    "\uff85\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\0\1\1\1\2\1\3\2\4\20\1\1\5\1\1"+
    "\1\5\25\1\1\6\1\7\1\10\1\11\1\12\1\13"+
    "\1\14\1\15\2\16\1\0\2\1\1\0\6\1\1\17"+
    "\5\1\2\20\4\1\2\21\51\1\1\22\1\1\1\22"+
    "\2\23\5\1\2\24\2\1\1\25\1\26\3\1\1\25"+
    "\71\1\1\27\1\23\4\1\2\30\1\31\1\1\1\32"+
    "\1\33\1\30\1\1\1\34\1\35\1\1\1\36\3\1"+
    "\1\37\1\1\1\37\15\1\2\40\2\1\1\41\2\1"+
    "\1\42\12\1\1\43\2\1\1\44\2\1\1\45\6\1"+
    "\1\44\2\1\1\43\7\1\1\46\1\47\4\1\1\47"+
    "\5\1\1\50\3\1\1\51\2\1\1\52\11\1\1\53"+
    "\7\1\1\54\14\1\1\55\14\1\1\56\2\57\1\1"+
    "\1\60\11\1\1\61\20\1\1\62\10\1\1\63\24\1"+
    "\1\64\1\65\4\1\1\66\7\1\1\67\3\1\1\70"+
    "\1\1\1\71\1\72\3\1\1\73\1\1\1\74\15\1"+
    "\1\75\1\1\1\76\1\77\1\100\6\1\1\51\4\1"+
    "\1\101\1\102\1\1\1\103\5\1\1\104\1\105\7\1"+
    "\1\105\11\1\1\106\12\1\1\107\1\110\1\107\6\1"+
    "\1\111\2\1\1\112\16\1\2\113\1\114\1\1\1\115"+
    "\2\1\1\116\1\1\1\117\1\1\1\120\3\1\1\121"+
    "\2\1\1\120\5\1\1\122\2\1\1\123\2\1\1\123"+
    "\1\124\1\125\2\1\1\126\1\127\1\130\1\131\1\132"+
    "\1\133\3\1\1\134\1\131\5\1\1\135\1\136\1\137"+
    "\13\1\1\140\1\141\1\1\1\142\16\1\1\143\6\1"+
    "\1\144\5\1\1\145\1\146\1\147\1\150\23\1\1\151"+
    "\1\152\1\1\1\153\3\1\1\153\2\1\1\154\4\1"+
    "\1\155\1\156\1\1\1\157\1\1\1\160\6\1\1\161"+
    "\3\1\1\162\1\163\1\164\1\165\1\1\1\166\5\1"+
    "\1\167\34\1\2\170\1\171\1\172\6\1\1\173\1\174"+
    "\1\175\4\1\1\176\1\1\1\177\11\1\1\200\3\1"+
    "\1\201\4\1\1\202\1\203\1\204\6\1\1\205\1\62"+
    "\2\1\1\206\1\207\15\1\1\210\1\211\14\1\1\212"+
    "\1\213\1\214\1\215\1\0\1\216\1\217\1\220\1\1"+
    "\1\221\1\222\1\223\2\1\1\224\2\1\1\0\1\1"+
    "\1\225\1\226\1\0\1\1\1\0\1\1\1\0\1\1"+
    "\1\0\1\1\1\0\1\1\1\204\2\1";

  private static int [] zzUnpackAction() {
    int [] result = new int[828];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\101\0\202\0\303\0\u0104\0\u0145\0\u0186\0\u01c7"+
    "\0\u0208\0\u0249\0\u028a\0\u02cb\0\u030c\0\u034d\0\u038e\0\u03cf"+
    "\0\u0410\0\u0451\0\u0492\0\u04d3\0\u0514\0\u0555\0\u0596\0\u05d7"+
    "\0\u0618\0\u0659\0\u069a\0\u06db\0\u071c\0\u075d\0\u079e\0\u07df"+
    "\0\u0820\0\u0861\0\u08a2\0\u08e3\0\u0924\0\u0965\0\u09a6\0\u09e7"+
    "\0\u0a28\0\u0a69\0\u0aaa\0\u0aeb\0\u0b2c\0\u0b6d\0\303\0\303"+
    "\0\303\0\303\0\303\0\303\0\303\0\101\0\u0bae\0\u0bef"+
    "\0\u0c30\0\u0c71\0\u0cb2\0\u0cf3\0\u0d34\0\u0d75\0\u0db6\0\u0df7"+
    "\0\u0e38\0\u0e79\0\101\0\u0eba\0\u0efb\0\u0f3c\0\u0f7d\0\u0fbe"+
    "\0\u0fff\0\u1040\0\u1081\0\u10c2\0\u1103\0\u1144\0\u1185\0\u11c6"+
    "\0\u1207\0\u1248\0\u1289\0\u12ca\0\u130b\0\u134c\0\u138d\0\u13ce"+
    "\0\u140f\0\u1450\0\u1491\0\u14d2\0\u1513\0\u1554\0\u1595\0\u15d6"+
    "\0\u1617\0\u1658\0\u1699\0\u16da\0\u171b\0\u175c\0\u179d\0\u17de"+
    "\0\u181f\0\u1860\0\u18a1\0\u18e2\0\u1923\0\u1964\0\u19a5\0\u19e6"+
    "\0\u1a27\0\u1a68\0\u1aa9\0\u1aea\0\u1b2b\0\u1b6c\0\u1bad\0\u1bee"+
    "\0\u1c2f\0\u1c70\0\u1cb1\0\u1cf2\0\u1d33\0\u1d74\0\u1db5\0\u1df6"+
    "\0\u1e37\0\u1e78\0\u1eb9\0\u1efa\0\u1f3b\0\u1f7c\0\u1fbd\0\u1ffe"+
    "\0\101\0\u203f\0\u2080\0\u20c1\0\u2102\0\u2143\0\u2184\0\u21c5"+
    "\0\u2206\0\u2247\0\u2288\0\u22c9\0\u230a\0\u234b\0\u238c\0\u23cd"+
    "\0\u240e\0\u244f\0\u2490\0\u24d1\0\u2512\0\u2553\0\u2594\0\u25d5"+
    "\0\u2616\0\u2657\0\u2698\0\u26d9\0\u271a\0\u275b\0\u279c\0\u27dd"+
    "\0\u281e\0\u285f\0\u28a0\0\u28e1\0\u2922\0\u2963\0\u29a4\0\u29e5"+
    "\0\u2a26\0\u2a67\0\u2aa8\0\u2ae9\0\u2b2a\0\u2b6b\0\u2bac\0\u2bed"+
    "\0\u2c2e\0\u2c6f\0\u2cb0\0\u2cf1\0\u2d32\0\u2d73\0\u2db4\0\u2df5"+
    "\0\u2e36\0\u2e77\0\u2eb8\0\u2ef9\0\u2f3a\0\u2f7b\0\101\0\303"+
    "\0\u2fbc\0\u2ffd\0\u303e\0\u307f\0\u30c0\0\u3101\0\101\0\u3142"+
    "\0\101\0\101\0\u3183\0\u31c4\0\101\0\101\0\u3205\0\101"+
    "\0\u3246\0\u3287\0\u32c8\0\u3309\0\u334a\0\u338b\0\u33cc\0\u340d"+
    "\0\u344e\0\u348f\0\u34d0\0\u3511\0\u3552\0\u3593\0\u35d4\0\u3615"+
    "\0\u3656\0\u3697\0\u36d8\0\u3719\0\u375a\0\u379b\0\u37dc\0\101"+
    "\0\u381d\0\u385e\0\101\0\u389f\0\u38e0\0\u3921\0\u3962\0\u39a3"+
    "\0\u39e4\0\u3a25\0\u3a66\0\u3aa7\0\u3ae8\0\u3b29\0\u3b6a\0\u3bab"+
    "\0\u3bec\0\u3c2d\0\u3c6e\0\101\0\u3caf\0\u3cf0\0\u3d31\0\u3d72"+
    "\0\u3db3\0\u3df4\0\u3e35\0\u3e76\0\u3eb7\0\u3ef8\0\u3f39\0\u3f7a"+
    "\0\u3fbb\0\u3ffc\0\u403d\0\u407e\0\u40bf\0\101\0\u4100\0\u4141"+
    "\0\u4182\0\u41c3\0\u4204\0\u4245\0\u4286\0\u42c7\0\u4308\0\u4349"+
    "\0\u438a\0\101\0\u43cb\0\u440c\0\u444d\0\101\0\u448e\0\u44cf"+
    "\0\101\0\u4510\0\u4551\0\u4592\0\u45d3\0\u4614\0\u4655\0\u4696"+
    "\0\u46d7\0\u4718\0\101\0\u4759\0\u479a\0\u47db\0\u481c\0\u485d"+
    "\0\u489e\0\u48df\0\101\0\u4920\0\u4961\0\u49a2\0\u49e3\0\u4a24"+
    "\0\u4a65\0\u4aa6\0\u4ae7\0\u4b28\0\u4b69\0\u4baa\0\u4beb\0\101"+
    "\0\u4c2c\0\u4c6d\0\u4cae\0\u4cef\0\u4d30\0\u4d71\0\u4db2\0\u4df3"+
    "\0\u4e34\0\u4e75\0\u4eb6\0\u4ef7\0\101\0\u4f38\0\u4f79\0\u4fba"+
    "\0\101\0\u4ffb\0\u503c\0\u507d\0\u50be\0\u50ff\0\u5140\0\u5181"+
    "\0\u51c2\0\u5203\0\101\0\u5244\0\u5285\0\u52c6\0\u5307\0\u5348"+
    "\0\u5389\0\u53ca\0\u540b\0\u544c\0\u548d\0\u54ce\0\u550f\0\u5550"+
    "\0\u5591\0\u55d2\0\u5613\0\u5654\0\u5695\0\u56d6\0\u5717\0\u5758"+
    "\0\u5799\0\u57da\0\u581b\0\u585c\0\101\0\u589d\0\u58de\0\u591f"+
    "\0\u5960\0\u59a1\0\u59e2\0\u5a23\0\u5a64\0\u5aa5\0\u5ae6\0\u5b27"+
    "\0\u5b68\0\u5ba9\0\u5bea\0\u5c2b\0\u5c6c\0\u5cad\0\u5cee\0\u5d2f"+
    "\0\u5d70\0\101\0\101\0\u5db1\0\u5df2\0\u5e33\0\u5e74\0\101"+
    "\0\u5eb5\0\u5ef6\0\u5f37\0\u5f78\0\u5fb9\0\u5ffa\0\u603b\0\101"+
    "\0\u607c\0\u60bd\0\u60fe\0\101\0\u613f\0\101\0\101\0\u6180"+
    "\0\u61c1\0\u6202\0\101\0\u6243\0\101\0\u6284\0\u62c5\0\u6306"+
    "\0\u6347\0\u6388\0\u63c9\0\u640a\0\u644b\0\u648c\0\u64cd\0\u650e"+
    "\0\u654f\0\u6590\0\101\0\u65d1\0\101\0\101\0\101\0\u6612"+
    "\0\u6653\0\u6694\0\u66d5\0\u6716\0\u6757\0\303\0\u6798\0\u67d9"+
    "\0\u681a\0\u685b\0\101\0\101\0\u689c\0\101\0\u68dd\0\u691e"+
    "\0\u695f\0\u69a0\0\u69e1\0\101\0\u6a22\0\u6a63\0\u6aa4\0\u6ae5"+
    "\0\u6b26\0\u6b67\0\u6ba8\0\u6be9\0\u6c2a\0\u6c6b\0\u6cac\0\u6ced"+
    "\0\u6d2e\0\u6d6f\0\u6db0\0\u6df1\0\u6e32\0\u6e73\0\101\0\u6eb4"+
    "\0\u6ef5\0\u6f36\0\u6f77\0\u6fb8\0\u6ff9\0\u703a\0\u707b\0\u70bc"+
    "\0\u70fd\0\u713e\0\101\0\u717f\0\u71c0\0\u7201\0\u7242\0\u7283"+
    "\0\u72c4\0\u7305\0\101\0\u7346\0\u7387\0\101\0\u73c8\0\u7409"+
    "\0\u744a\0\u748b\0\u74cc\0\u750d\0\u754e\0\u758f\0\u75d0\0\u7611"+
    "\0\u7652\0\u7693\0\u76d4\0\u7715\0\u7756\0\u7797\0\101\0\u77d8"+
    "\0\101\0\u7819\0\u785a\0\101\0\u789b\0\101\0\u78dc\0\u791d"+
    "\0\u795e\0\u799f\0\u79e0\0\101\0\u7a21\0\u7a62\0\u7aa3\0\u7ae4"+
    "\0\u7b25\0\u7b66\0\u7ba7\0\u7be8\0\101\0\u7c29\0\u7c6a\0\u7cab"+
    "\0\u7cec\0\u7d2d\0\u7d6e\0\101\0\101\0\u7daf\0\u7df0\0\101"+
    "\0\101\0\101\0\u7e31\0\101\0\101\0\u7e72\0\u7eb3\0\u7ef4"+
    "\0\101\0\u7f35\0\u7f76\0\u7fb7\0\u7ff8\0\u8039\0\u807a\0\101"+
    "\0\101\0\101\0\u80bb\0\u80fc\0\u813d\0\u817e\0\u81bf\0\u8200"+
    "\0\u8241\0\u8282\0\u82c3\0\u8304\0\u8345\0\101\0\101\0\u8386"+
    "\0\101\0\u83c7\0\u8408\0\u8449\0\u848a\0\u84cb\0\u850c\0\u854d"+
    "\0\u858e\0\u85cf\0\u8610\0\u8651\0\u8692\0\u86d3\0\u8714\0\101"+
    "\0\u8755\0\u8796\0\u87d7\0\u8818\0\u8859\0\u889a\0\101\0\u88db"+
    "\0\u891c\0\u895d\0\u899e\0\u89df\0\101\0\101\0\101\0\101"+
    "\0\u8a20\0\u8a61\0\u8aa2\0\u8ae3\0\u8b24\0\u8b65\0\u8ba6\0\u8be7"+
    "\0\u8c28\0\u8c69\0\u8caa\0\u8ceb\0\u8d2c\0\u8d6d\0\u8dae\0\u8def"+
    "\0\u8e30\0\u8e71\0\u8eb2\0\101\0\101\0\u8ef3\0\u8f34\0\u8f75"+
    "\0\u8fb6\0\u8ff7\0\u9038\0\u9079\0\u90ba\0\101\0\u90fb\0\u913c"+
    "\0\u917d\0\u91be\0\101\0\101\0\u91ff\0\101\0\u9240\0\101"+
    "\0\u9281\0\u92c2\0\u9303\0\u9344\0\u9385\0\u93c6\0\101\0\u9407"+
    "\0\u9448\0\u9489\0\101\0\101\0\101\0\101\0\u94ca\0\101"+
    "\0\u950b\0\u954c\0\u958d\0\u95ce\0\u960f\0\101\0\u9650\0\u9691"+
    "\0\u96d2\0\u9713\0\u9754\0\u9795\0\u97d6\0\u9817\0\u9858\0\u9899"+
    "\0\u98da\0\u991b\0\u995c\0\u999d\0\u99de\0\u9a1f\0\u9a60\0\u9aa1"+
    "\0\u9ae2\0\u9b23\0\u9b64\0\u9ba5\0\u9be6\0\u9c27\0\u9c68\0\u9ca9"+
    "\0\u9cea\0\u9d2b\0\u9d6c\0\u9dad\0\101\0\101\0\u9dee\0\u9e2f"+
    "\0\u9e70\0\u9eb1\0\u9ef2\0\u9f33\0\101\0\101\0\101\0\u9f74"+
    "\0\u9fb5\0\u9ff6\0\ua037\0\101\0\ua078\0\101\0\ua0b9\0\ua0fa"+
    "\0\ua13b\0\ua17c\0\ua1bd\0\ua1fe\0\ua23f\0\ua280\0\ua2c1\0\101"+
    "\0\ua302\0\ua343\0\ua384\0\101\0\ua3c5\0\ua406\0\ua447\0\ua488"+
    "\0\101\0\101\0\101\0\ua4c9\0\ua50a\0\ua54b\0\ua58c\0\ua5cd"+
    "\0\ua60e\0\101\0\101\0\ua64f\0\ua690\0\101\0\101\0\ua6d1"+
    "\0\ua712\0\ua753\0\ua794\0\ua7d5\0\ua816\0\ua857\0\ua898\0\ua8d9"+
    "\0\ua91a\0\ua95b\0\ua99c\0\ua9dd\0\101\0\101\0\uaa1e\0\uaa5f"+
    "\0\uaaa0\0\uaae1\0\uab22\0\uab63\0\uaba4\0\uabe5\0\uac26\0\uac67"+
    "\0\uaca8\0\uace9\0\101\0\101\0\101\0\101\0\uad2a\0\101"+
    "\0\101\0\101\0\uad6b\0\101\0\101\0\101\0\uadac\0\uaded"+
    "\0\101\0\uae2e\0\uae6f\0\uaeb0\0\uaef1\0\101\0\101\0\uaf32"+
    "\0\uaf73\0\uafb4\0\uaff5\0\ub036\0\ub077\0\ub0b8\0\ub0f9\0\ub13a"+
    "\0\ub17b\0\303\0\ub1bc\0\ub1fd";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[828];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\0\1\2\1\0\1\3\1\4\1\5\1\6\1\7"+
    "\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17"+
    "\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27"+
    "\1\30\1\31\1\0\1\32\1\33\1\34\1\35\1\36"+
    "\1\37\1\40\1\41\1\2\1\42\1\2\1\43\1\44"+
    "\1\45\1\2\1\46\1\2\1\47\1\50\1\51\1\52"+
    "\1\53\1\54\4\2\1\3\1\0\1\55\1\56\1\57"+
    "\1\60\1\61\1\62\1\63\1\64\1\65\1\0\2\2"+
    "\2\0\25\2\1\0\33\2\2\0\2\2\12\0\1\3"+
    "\62\0\1\3\114\0\2\2\2\0\14\2\2\66\1\67"+
    "\1\70\5\2\1\71\22\2\1\72\1\2\1\73\6\2"+
    "\2\0\2\2\10\0\2\2\2\0\15\2\1\66\1\67"+
    "\6\2\1\74\22\2\1\72\10\2\2\0\2\2\10\0"+
    "\2\2\2\0\3\2\1\75\2\2\1\76\16\2\1\0"+
    "\33\2\2\0\2\2\10\0\2\2\2\0\4\2\1\77"+
    "\11\2\1\100\6\2\1\0\3\2\1\101\16\2\1\102"+
    "\10\2\2\0\2\2\10\0\2\2\2\0\15\2\1\103"+
    "\7\2\1\0\33\2\2\0\2\2\10\0\2\2\2\0"+
    "\3\2\1\104\21\2\1\0\33\2\2\0\2\2\10\0"+
    "\2\2\2\0\4\2\1\77\2\2\1\105\6\2\1\100"+
    "\1\106\5\2\1\0\3\2\1\101\1\2\1\107\14\2"+
    "\1\102\1\2\1\110\6\2\2\0\2\2\10\0\2\2"+
    "\2\0\14\2\2\103\7\2\1\0\33\2\2\0\2\2"+
    "\10\0\2\2\2\0\1\111\1\112\1\2\1\113\1\114"+
    "\1\2\1\115\1\116\1\2\1\117\1\2\1\120\6\2"+
    "\1\121\1\2\1\122\1\0\33\2\2\0\2\2\10\0"+
    "\2\2\2\0\1\2\1\123\22\2\1\124\1\0\3\2"+
    "\1\125\21\2\1\126\3\2\1\127\1\2\2\0\2\2"+
    "\10\0\2\2\2\0\1\2\1\112\1\2\1\113\1\114"+
    "\4\2\1\117\12\2\1\122\1\0\33\2\2\0\2\2"+
    "\10\0\2\2\2\0\1\130\1\123\20\2\1\131\1\2"+
    "\1\124\1\0\3\2\1\125\1\2\1\132\17\2\1\126"+
    "\1\133\2\2\1\127\1\134\2\0\2\2\10\0\2\2"+
    "\2\0\1\135\1\136\1\2\1\137\1\140\1\2\1\141"+
    "\1\142\1\143\1\144\1\145\1\146\6\2\1\147\1\150"+
    "\1\151\1\0\1\152\2\2\1\153\1\2\1\154\25\2"+
    "\2\0\2\2\10\0\2\2\2\0\1\2\1\136\1\2"+
    "\1\137\1\140\4\2\1\144\1\145\10\2\1\150\1\151"+
    "\1\0\3\2\1\153\27\2\2\0\2\2\10\0\2\2"+
    "\2\0\11\2\1\155\1\156\6\2\1\157\2\2\1\160"+
    "\1\0\1\2\1\161\31\2\2\0\2\2\10\0\2\2"+
    "\2\0\10\2\1\162\1\155\1\156\1\163\4\2\1\164"+
    "\1\157\1\165\1\2\1\160\1\0\1\2\1\161\1\166"+
    "\30\2\2\0\2\2\10\0\2\2\2\0\3\2\1\167"+
    "\2\2\1\170\1\2\1\171\1\172\1\173\1\174\11\2"+
    "\1\0\33\2\2\0\2\2\10\0\2\2\2\0\3\2"+
    "\1\167\5\2\1\172\1\173\12\2\1\0\33\2\2\0"+
    "\2\2\10\0\2\2\2\0\23\2\1\175\1\2\1\0"+
    "\1\176\1\177\1\200\1\201\1\2\1\202\3\2\1\203"+
    "\10\2\1\204\1\2\1\205\6\2\2\0\2\2\10\0"+
    "\2\2\2\0\1\2\1\206\2\2\1\207\1\210\3\2"+
    "\1\211\12\2\1\212\1\0\33\2\2\0\2\2\10\0"+
    "\2\2\2\0\23\2\1\175\1\2\1\0\1\2\1\177"+
    "\1\2\1\213\16\2\1\204\10\2\2\0\2\2\10\0"+
    "\2\2\2\0\1\214\1\206\1\215\1\2\1\207\1\210"+
    "\1\2\1\216\1\2\1\211\1\2\1\211\6\2\1\217"+
    "\1\2\1\212\1\0\33\2\2\0\2\2\10\0\2\2"+
    "\2\0\11\2\1\220\13\2\1\0\33\2\2\0\2\2"+
    "\10\0\2\2\2\0\11\2\1\220\1\2\1\221\11\2"+
    "\1\0\33\2\2\0\2\2\10\0\2\2\2\0\3\2"+
    "\1\222\21\2\1\0\33\2\2\0\2\2\10\0\2\2"+
    "\2\0\1\2\1\223\1\2\1\224\1\225\4\2\1\226"+
    "\12\2\1\227\1\0\3\2\1\230\27\2\2\0\2\2"+
    "\10\0\2\2\2\0\3\2\1\222\2\2\1\231\16\2"+
    "\1\0\33\2\2\0\2\2\10\0\2\2\2\0\1\232"+
    "\1\223\1\2\1\224\1\225\1\2\1\233\1\234\1\2"+
    "\1\226\1\2\1\235\6\2\1\236\1\2\1\227\1\0"+
    "\3\2\1\230\1\2\1\237\25\2\2\0\2\2\10\0"+
    "\2\2\2\0\1\2\1\240\1\2\1\241\2\2\1\242"+
    "\2\2\1\243\1\2\1\244\11\2\1\0\33\2\2\0"+
    "\2\2\10\0\2\2\2\0\1\2\1\245\1\2\1\246"+
    "\5\2\1\243\13\2\1\0\33\2\2\0\2\2\10\0"+
    "\2\2\2\0\3\2\1\247\2\2\1\250\1\2\1\251"+
    "\1\252\1\253\1\254\6\2\1\255\1\2\1\256\1\0"+
    "\33\2\2\0\2\2\10\0\2\2\2\0\3\2\1\257"+
    "\5\2\1\252\1\253\11\2\1\256\1\0\33\2\2\0"+
    "\2\2\10\0\2\2\2\0\1\260\1\261\1\2\1\262"+
    "\2\2\1\263\2\2\1\264\1\2\1\265\11\2\1\0"+
    "\1\2\1\266\1\267\30\2\2\0\2\2\10\0\2\2"+
    "\2\0\1\2\1\261\1\2\1\262\5\2\1\264\13\2"+
    "\1\0\1\2\1\266\31\2\2\0\2\2\10\0\2\2"+
    "\2\0\10\2\1\270\1\271\1\272\1\273\11\2\1\0"+
    "\33\2\2\0\2\2\10\0\2\2\2\0\1\2\1\274"+
    "\7\2\1\275\12\2\1\276\1\0\33\2\2\0\2\2"+
    "\10\0\2\2\2\0\11\2\1\271\1\272\12\2\1\0"+
    "\33\2\2\0\2\2\10\0\2\2\2\0\1\277\1\274"+
    "\7\2\1\275\1\2\1\300\6\2\1\301\1\2\1\276"+
    "\1\0\33\2\2\0\2\2\10\0\2\2\2\0\24\2"+
    "\1\302\1\0\33\2\2\0\2\2\10\0\2\2\2\0"+
    "\22\2\1\303\1\2\1\302\1\0\33\2\2\0\2\2"+
    "\10\0\2\2\2\0\4\2\1\304\2\2\1\305\15\2"+
    "\1\0\33\2\2\0\2\2\10\0\2\2\2\0\4\2"+
    "\1\306\20\2\1\0\33\2\2\0\2\2\10\0\2\2"+
    "\2\0\15\2\1\307\7\2\1\0\33\2\2\0\2\2"+
    "\10\0\2\2\2\0\14\2\1\307\10\2\1\0\33\2"+
    "\2\0\2\2\37\0\1\310\2\0\1\310\46\0\2\2"+
    "\2\0\16\2\1\311\6\2\1\0\14\2\1\312\16\2"+
    "\2\0\2\2\10\0\2\2\2\0\17\2\1\313\5\2"+
    "\1\0\13\2\1\314\17\2\2\0\2\2\37\0\1\310"+
    "\51\0\2\2\2\0\4\2\1\315\20\2\1\0\33\2"+
    "\2\0\2\2\10\0\2\2\2\0\7\2\1\316\15\2"+
    "\1\0\33\2\2\0\2\2\10\0\2\2\2\0\25\2"+
    "\1\0\1\2\1\317\31\2\2\0\2\2\10\0\2\2"+
    "\2\0\12\2\1\320\12\2\1\0\33\2\2\0\2\2"+
    "\10\0\2\2\2\0\25\2\1\0\11\2\1\321\21\2"+
    "\2\0\2\2\10\0\2\2\2\0\11\2\1\322\13\2"+
    "\1\0\33\2\2\0\2\2\10\0\2\2\2\0\4\2"+
    "\1\323\20\2\1\0\33\2\2\0\2\2\10\0\2\2"+
    "\2\0\25\2\1\0\2\2\1\317\30\2\2\0\2\2"+
    "\10\0\2\2\2\0\10\2\1\324\14\2\1\0\33\2"+
    "\2\0\2\2\10\0\2\2\2\0\25\2\1\0\7\2"+
    "\1\321\23\2\2\0\2\2\10\0\2\2\2\0\13\2"+
    "\1\322\11\2\1\0\33\2\2\0\2\2\10\0\2\2"+
    "\2\0\14\2\1\325\10\2\1\0\1\326\32\2\2\0"+
    "\2\2\10\0\2\2\2\0\15\2\1\325\5\2\1\326"+
    "\1\2\1\0\33\2\2\0\2\2\10\0\2\2\2\0"+
    "\4\2\1\327\14\2\1\330\3\2\1\0\33\2\2\0"+
    "\2\2\10\0\2\2\2\0\25\2\1\0\22\2\1\331"+
    "\10\2\2\0\2\2\10\0\2\2\2\0\7\2\1\332"+
    "\10\2\1\330\4\2\1\0\33\2\2\0\2\2\10\0"+
    "\2\2\2\0\25\2\1\0\24\2\1\333\6\2\2\0"+
    "\2\2\10\0\2\2\2\0\25\2\1\0\1\2\1\334"+
    "\1\2\1\335\27\2\2\0\2\2\10\0\2\2\2\0"+
    "\25\2\1\0\2\2\1\336\2\2\1\337\25\2\2\0"+
    "\2\2\10\0\2\2\2\0\25\2\1\0\21\2\1\340"+
    "\11\2\2\0\2\2\10\0\2\2\2\0\25\2\1\0"+
    "\23\2\1\341\7\2\2\0\2\2\10\0\2\2\2\0"+
    "\25\2\1\0\10\2\1\342\22\2\2\0\2\2\10\0"+
    "\2\2\2\0\15\2\1\343\7\2\1\0\33\2\2\0"+
    "\2\2\10\0\2\2\2\0\11\2\1\344\13\2\1\0"+
    "\33\2\2\0\2\2\10\0\2\2\2\0\11\2\1\345"+
    "\13\2\1\0\33\2\2\0\2\2\10\0\2\2\2\0"+
    "\25\2\1\0\14\2\1\346\16\2\2\0\2\2\10\0"+
    "\2\2\2\0\25\2\1\0\12\2\1\347\20\2\2\0"+
    "\2\2\10\0\2\2\2\0\14\2\1\350\10\2\1\0"+
    "\33\2\2\0\2\2\10\0\2\2\2\0\13\2\1\351"+
    "\11\2\1\0\33\2\2\0\2\2\10\0\2\2\2\0"+
    "\13\2\1\352\11\2\1\0\33\2\2\0\2\2\10\0"+
    "\2\2\2\0\25\2\1\0\13\2\1\353\17\2\2\0"+
    "\2\2\10\0\2\2\2\0\25\2\1\0\32\2\1\354"+
    "\2\0\2\2\10\0\2\2\2\0\25\2\1\0\31\2"+
    "\1\355\1\2\2\0\2\2\10\0\2\2\2\0\23\2"+
    "\1\356\1\2\1\0\33\2\2\0\2\2\10\0\2\2"+
    "\2\0\25\2\1\0\14\2\1\357\5\2\1\360\10\2"+
    "\2\0\2\2\10\0\2\2\2\0\25\2\1\0\1\361"+
    "\32\2\2\0\2\2\10\0\2\2\2\0\25\2\1\0"+
    "\13\2\1\362\10\2\1\360\6\2\2\0\2\2\10\0"+
    "\2\2\2\0\13\2\1\363\11\2\1\0\33\2\2\0"+
    "\2\2\10\0\2\2\2\0\25\2\1\0\14\2\1\364"+
    "\10\2\1\365\5\2\2\0\2\2\10\0\2\2\2\0"+
    "\11\2\1\363\13\2\1\0\33\2\2\0\2\2\10\0"+
    "\2\2\2\0\25\2\1\0\13\2\1\366\12\2\1\367"+
    "\4\2\2\0\2\2\10\0\2\2\2\0\25\2\1\0"+
    "\1\370\32\2\2\0\2\2\10\0\2\2\2\0\24\2"+
    "\1\371\1\0\33\2\2\0\2\2\10\0\2\2\2\0"+
    "\23\2\1\372\1\2\1\0\33\2\2\0\2\2\10\0"+
    "\2\2\2\0\22\2\1\373\2\2\1\0\33\2\2\0"+
    "\2\2\10\0\2\2\2\0\3\2\1\374\21\2\1\0"+
    "\33\2\2\0\2\2\10\0\2\2\2\0\6\2\1\375"+
    "\16\2\1\0\33\2\2\0\2\2\10\0\2\2\2\0"+
    "\25\2\1\0\22\2\1\376\10\2\2\0\2\2\10\0"+
    "\2\2\2\0\1\2\1\377\1\2\1\u0100\5\2\1\u0101"+
    "\12\2\1\u0102\1\0\1\2\1\u0103\31\2\2\0\2\2"+
    "\10\0\2\2\2\0\3\2\1\u0104\5\2\1\u0105\13\2"+
    "\1\0\33\2\2\0\2\2\10\0\2\2\2\0\25\2"+
    "\1\0\3\2\1\u0106\13\2\1\u0107\13\2\2\0\2\2"+
    "\10\0\2\2\2\0\11\2\1\u0108\13\2\1\0\33\2"+
    "\2\0\2\2\10\0\2\2\2\0\1\u0109\5\2\1\u010a"+
    "\4\2\1\u010b\6\2\1\u010c\2\2\1\0\2\2\1\u010d"+
    "\30\2\2\0\2\2\10\0\2\2\2\0\25\2\1\0"+
    "\24\2\1\u010e\6\2\2\0\2\2\10\0\2\2\2\0"+
    "\6\2\1\u0104\4\2\1\u010f\11\2\1\0\33\2\2\0"+
    "\2\2\10\0\2\2\2\0\25\2\1\0\5\2\1\u0110"+
    "\7\2\1\u0111\15\2\2\0\2\2\10\0\2\2\2\0"+
    "\13\2\1\u0112\11\2\1\0\33\2\2\0\2\2\10\0"+
    "\2\2\2\0\25\2\1\0\22\2\1\u0113\10\2\2\0"+
    "\2\2\10\0\2\2\2\0\25\2\1\0\24\2\1\u0114"+
    "\6\2\2\0\2\2\10\0\2\2\2\0\1\u0115\1\2"+
    "\1\u0116\3\2\1\u0117\4\2\1\u0118\6\2\1\u0119\2\2"+
    "\1\0\33\2\2\0\2\2\10\0\2\2\2\0\25\2"+
    "\1\0\3\2\1\u011a\27\2\2\0\2\2\10\0\2\2"+
    "\2\0\1\2\1\u011b\1\2\1\u011c\1\2\1\u0116\3\2"+
    "\1\u011d\12\2\1\u011e\1\0\33\2\2\0\2\2\10\0"+
    "\2\2\2\0\25\2\1\0\5\2\1\u011f\25\2\2\0"+
    "\2\2\10\0\2\2\2\0\24\2\1\u0120\1\0\33\2"+
    "\2\0\2\2\10\0\2\2\2\0\22\2\1\u0121\2\2"+
    "\1\0\33\2\2\0\2\2\10\0\2\2\2\0\11\2"+
    "\1\u0122\13\2\1\0\33\2\2\0\2\2\10\0\2\2"+
    "\2\0\13\2\1\u0122\11\2\1\0\33\2\2\0\2\2"+
    "\10\0\2\2\2\0\21\2\1\u0123\3\2\1\0\3\2"+
    "\1\u0124\27\2\2\0\2\2\10\0\2\2\2\0\20\2"+
    "\1\u0125\4\2\1\0\5\2\1\u0126\25\2\2\0\2\2"+
    "\10\0\2\2\2\0\25\2\1\0\25\2\1\u0127\5\2"+
    "\2\0\2\2\10\0\2\2\2\0\3\2\1\u0128\1\2"+
    "\1\u0129\17\2\1\0\33\2\2\0\2\2\10\0\2\2"+
    "\2\0\2\2\1\u0129\3\2\1\u012a\16\2\1\0\33\2"+
    "\2\0\2\2\10\0\2\2\2\0\25\2\1\0\22\2"+
    "\1\u012b\10\2\2\0\2\2\10\0\2\2\2\0\25\2"+
    "\1\0\14\2\1\u012c\16\2\2\0\2\2\10\0\2\2"+
    "\2\0\15\2\1\u012d\7\2\1\0\33\2\2\0\2\2"+
    "\10\0\2\2\2\0\25\2\1\0\22\2\1\u012e\10\2"+
    "\2\0\2\2\10\0\2\2\2\0\21\2\1\u0123\3\2"+
    "\1\0\3\2\1\u0126\27\2\2\0\2\2\10\0\2\2"+
    "\2\0\25\2\1\0\24\2\1\u012f\6\2\2\0\2\2"+
    "\10\0\2\2\2\0\14\2\1\u0130\10\2\1\0\33\2"+
    "\2\0\2\2\10\0\2\2\2\0\25\2\1\0\13\2"+
    "\1\u0131\17\2\2\0\2\2\10\0\2\2\2\0\25\2"+
    "\1\0\24\2\1\u0132\6\2\2\0\2\2\10\0\2\2"+
    "\2\0\25\2\1\0\11\2\1\u0133\21\2\2\0\2\2"+
    "\10\0\2\2\2\0\25\2\1\0\7\2\1\u0133\23\2"+
    "\2\0\2\2\10\0\2\2\2\0\4\2\1\u0134\20\2"+
    "\1\0\25\2\1\u0135\5\2\2\0\2\2\10\0\2\2"+
    "\2\0\25\2\1\0\1\2\1\u0136\2\2\1\u0137\20\2"+
    "\1\u0138\5\2\2\0\2\2\10\0\2\2\2\0\4\2"+
    "\1\u0139\20\2\1\0\33\2\2\0\2\2\10\0\2\2"+
    "\2\0\25\2\1\0\22\2\1\u013a\10\2\2\0\2\2"+
    "\10\0\2\2\2\0\21\2\1\u013b\3\2\1\0\33\2"+
    "\2\0\2\2\10\0\2\2\2\0\25\2\1\0\22\2"+
    "\1\u013c\10\2\2\0\2\2\10\0\2\2\2\0\3\2"+
    "\1\u013d\21\2\1\0\33\2\2\0\2\2\10\0\2\2"+
    "\2\0\7\2\1\u013e\15\2\1\0\26\2\1\u013f\4\2"+
    "\2\0\2\2\10\0\2\2\2\0\25\2\1\0\2\2"+
    "\1\u0140\3\2\1\u0141\17\2\1\u0142\4\2\2\0\2\2"+
    "\10\0\2\2\2\0\7\2\1\u0143\15\2\1\0\33\2"+
    "\2\0\2\2\10\0\2\2\2\0\25\2\1\0\24\2"+
    "\1\u0144\6\2\2\0\2\2\10\0\2\2\2\0\20\2"+
    "\1\u013b\4\2\1\0\33\2\2\0\2\2\10\0\2\2"+
    "\2\0\25\2\1\0\24\2\1\u0145\6\2\2\0\2\2"+
    "\10\0\2\2\2\0\6\2\1\u0146\16\2\1\0\33\2"+
    "\2\0\2\2\10\0\2\2\2\0\25\2\1\0\4\2"+
    "\1\u0147\26\2\2\0\2\2\10\0\2\2\2\0\25\2"+
    "\1\0\10\2\1\u0148\22\2\2\0\2\2\10\0\2\2"+
    "\2\0\25\2\1\0\12\2\1\u0148\20\2\2\0\2\2"+
    "\10\0\2\2\2\0\25\2\1\0\3\2\1\u0149\27\2"+
    "\2\0\2\2\10\0\2\2\2\0\25\2\1\0\5\2"+
    "\1\u014a\25\2\2\0\2\2\10\0\2\2\2\0\25\2"+
    "\1\0\4\2\1\u014b\26\2\2\0\2\2\10\0\2\2"+
    "\2\0\15\2\1\u014c\7\2\1\0\10\2\1\u0148\22\2"+
    "\2\0\2\2\10\0\2\2\2\0\23\2\1\u014d\1\2"+
    "\1\0\3\2\1\u014e\27\2\2\0\2\2\10\0\2\2"+
    "\2\0\25\2\1\0\1\u014f\4\2\1\u0150\25\2\2\0"+
    "\2\2\10\0\2\2\2\0\22\2\1\u0151\2\2\1\0"+
    "\33\2\2\0\2\2\10\0\2\2\2\0\25\2\1\0"+
    "\1\2\1\u0152\31\2\2\0\2\2\10\0\2\2\2\0"+
    "\24\2\1\u0153\1\0\33\2\2\0\2\2\10\0\2\2"+
    "\2\0\25\2\1\0\2\2\1\u0154\30\2\2\0\2\2"+
    "\10\0\2\2\2\0\17\2\1\u0155\5\2\1\0\2\2"+
    "\1\u0156\30\2\2\0\2\2\10\0\2\2\2\0\16\2"+
    "\1\u0155\6\2\1\0\1\2\1\u0157\31\2\2\0\2\2"+
    "\10\0\2\2\2\0\23\2\1\u0158\1\2\1\0\3\2"+
    "\1\u014e\27\2\2\0\2\2\10\0\2\2\2\0\25\2"+
    "\1\0\12\2\1\u0159\20\2\2\0\2\2\10\0\2\2"+
    "\2\0\25\2\1\0\10\2\1\u0159\22\2\2\0\2\2"+
    "\10\0\2\2\2\0\3\2\1\u015a\12\2\1\u015b\6\2"+
    "\1\0\33\2\2\0\2\2\10\0\2\2\2\0\6\2"+
    "\1\u015c\10\2\1\u015d\5\2\1\0\33\2\2\0\2\2"+
    "\10\0\2\2\2\0\24\2\1\u015e\1\0\33\2\2\0"+
    "\2\2\10\0\2\2\2\0\22\2\1\u015f\2\2\1\0"+
    "\33\2\2\0\2\2\10\0\2\2\2\0\24\2\1\u0160"+
    "\1\0\33\2\2\0\2\2\10\0\2\2\2\0\22\2"+
    "\1\u0161\2\2\1\0\33\2\2\0\2\2\10\0\2\2"+
    "\2\0\6\2\1\u0162\16\2\1\0\33\2\2\0\2\2"+
    "\10\0\2\2\2\0\25\2\1\0\22\2\1\u0163\10\2"+
    "\2\0\2\2\10\0\2\2\2\0\3\2\1\u0164\21\2"+
    "\1\0\33\2\2\0\2\2\10\0\2\2\2\0\25\2"+
    "\1\0\24\2\1\u0163\6\2\2\0\2\2\10\0\2\2"+
    "\2\0\25\2\1\0\22\2\1\u0165\10\2\2\0\2\2"+
    "\10\0\2\2\2\0\25\2\1\0\25\2\1\u0166\5\2"+
    "\2\0\2\2\10\0\2\2\2\0\23\2\1\u0167\1\2"+
    "\1\0\33\2\2\0\2\2\10\0\2\2\2\0\25\2"+
    "\1\0\24\2\1\u0168\6\2\2\0\2\2\10\0\2\2"+
    "\2\0\25\2\1\0\26\2\1\u0169\4\2\2\0\2\2"+
    "\10\0\2\2\2\0\25\2\1\0\1\u016a\32\2\2\0"+
    "\2\2\10\0\2\2\2\0\25\2\1\0\1\2\1\u016b"+
    "\31\2\2\0\2\2\10\0\2\2\2\0\25\2\1\0"+
    "\2\2\1\u016c\30\2\2\0\2\2\10\0\2\2\2\0"+
    "\1\2\1\u016d\23\2\1\0\33\2\2\0\2\2\10\0"+
    "\2\2\2\0\1\u016e\24\2\1\0\33\2\2\0\2\2"+
    "\10\0\2\2\2\0\1\2\1\u016f\23\2\1\0\33\2"+
    "\2\0\2\2\10\0\2\2\2\0\11\2\1\u0170\13\2"+
    "\1\0\33\2\2\0\2\2\10\0\2\2\2\0\25\2"+
    "\1\0\1\2\1\u0171\31\2\2\0\2\2\10\0\2\2"+
    "\2\0\13\2\1\u0172\11\2\1\0\33\2\2\0\2\2"+
    "\10\0\2\2\2\0\25\2\1\0\2\2\1\u0173\30\2"+
    "\2\0\2\2\10\0\2\2\2\0\25\2\1\0\1\2"+
    "\1\u0174\31\2\2\0\2\2\10\0\2\2\2\0\25\2"+
    "\1\0\2\2\1\u0175\30\2\2\0\2\2\10\0\2\2"+
    "\2\0\11\2\1\u0176\13\2\1\0\33\2\2\0\2\2"+
    "\10\0\2\2\2\0\25\2\1\0\1\2\1\u0177\31\2"+
    "\2\0\2\2\10\0\2\2\2\0\13\2\1\u0178\11\2"+
    "\1\0\33\2\2\0\2\2\10\0\2\2\2\0\15\2"+
    "\1\u0179\7\2\1\0\33\2\2\0\2\2\10\0\2\2"+
    "\2\0\25\2\1\0\11\2\1\u017a\21\2\2\0\2\2"+
    "\10\0\2\2\2\0\14\2\1\u017b\10\2\1\0\33\2"+
    "\2\0\2\2\10\0\2\2\2\0\25\2\1\0\7\2"+
    "\1\u017c\23\2\2\0\2\2\10\0\2\2\2\0\11\2"+
    "\1\u017d\13\2\1\0\33\2\2\0\2\2\10\0\2\2"+
    "\2\0\25\2\1\0\3\2\1\u017e\27\2\2\0\2\2"+
    "\10\0\2\2\2\0\13\2\1\u017d\11\2\1\0\33\2"+
    "\2\0\2\2\10\0\2\2\2\0\25\2\1\0\5\2"+
    "\1\u017f\25\2\2\0\2\2\10\0\2\2\2\0\25\2"+
    "\1\0\21\2\1\u0180\11\2\2\0\2\2\10\0\2\2"+
    "\2\0\25\2\1\0\23\2\1\u0181\7\2\2\0\2\2"+
    "\10\0\2\2\2\0\12\2\1\u0182\12\2\1\0\33\2"+
    "\2\0\2\2\10\0\2\2\2\0\1\2\1\u0183\23\2"+
    "\1\0\33\2\2\0\2\2\10\0\2\2\2\0\25\2"+
    "\1\0\10\2\1\u0184\14\2\1\u0185\5\2\2\0\2\2"+
    "\10\0\2\2\2\0\25\2\1\0\1\2\1\u0186\31\2"+
    "\2\0\2\2\10\0\2\2\2\0\1\2\1\u0187\7\2"+
    "\1\u0188\13\2\1\0\33\2\2\0\2\2\10\0\2\2"+
    "\2\0\10\2\1\u0189\14\2\1\0\33\2\2\0\2\2"+
    "\10\0\2\2\2\0\1\u018a\24\2\1\0\33\2\2\0"+
    "\2\2\10\0\2\2\2\0\25\2\1\0\12\2\1\u018b"+
    "\13\2\1\u018c\4\2\2\0\2\2\10\0\2\2\2\0"+
    "\25\2\1\0\2\2\1\u018d\30\2\2\0\2\2\10\0"+
    "\2\2\2\0\1\u018e\12\2\1\u018f\11\2\1\0\33\2"+
    "\2\0\2\2\10\0\2\2\2\0\17\2\1\u0190\5\2"+
    "\1\0\33\2\2\0\2\2\10\0\2\2\2\0\16\2"+
    "\1\u0191\6\2\1\0\33\2\2\0\2\2\10\0\2\2"+
    "\2\0\11\2\1\u0192\13\2\1\0\33\2\2\0\2\2"+
    "\10\0\2\2\2\0\12\2\1\u0193\12\2\1\0\33\2"+
    "\2\0\2\2\10\0\2\2\2\0\13\2\1\u0192\11\2"+
    "\1\0\33\2\2\0\2\2\10\0\2\2\2\0\10\2"+
    "\1\u0193\14\2\1\0\33\2\2\0\2\2\10\0\2\2"+
    "\2\0\3\2\1\u0194\21\2\1\0\33\2\2\0\2\2"+
    "\10\0\2\2\2\0\11\2\1\u0195\13\2\1\0\33\2"+
    "\2\0\2\2\10\0\2\2\2\0\6\2\1\u0196\16\2"+
    "\1\0\33\2\2\0\2\2\10\0\2\2\2\0\13\2"+
    "\1\u0197\11\2\1\0\33\2\2\0\2\2\10\0\2\2"+
    "\2\0\13\2\1\u0198\11\2\1\0\33\2\2\0\2\2"+
    "\10\0\2\2\2\0\25\2\1\0\1\2\1\u0199\1\2"+
    "\1\u019a\27\2\2\0\2\2\10\0\2\2\2\0\11\2"+
    "\1\u0198\13\2\1\0\33\2\2\0\2\2\10\0\2\2"+
    "\2\0\25\2\1\0\2\2\1\u019b\2\2\1\u019c\25\2"+
    "\2\0\2\2\10\0\2\2\2\0\21\2\1\u019d\3\2"+
    "\1\0\33\2\2\0\2\2\10\0\2\2\2\0\20\2"+
    "\1\u019e\4\2\1\0\33\2\2\0\2\2\10\0\2\2"+
    "\2\0\16\2\1\u019f\6\2\1\0\33\2\2\0\2\2"+
    "\10\0\2\2\2\0\15\2\1\u01a0\7\2\1\0\1\2"+
    "\1\u01a1\31\2\2\0\2\2\10\0\2\2\2\0\15\2"+
    "\1\u01a2\7\2\1\0\33\2\2\0\2\2\10\0\2\2"+
    "\2\0\1\2\1\u01a3\3\2\1\u01a4\7\2\1\u01a5\5\2"+
    "\1\u01a6\1\2\1\0\33\2\2\0\2\2\10\0\2\2"+
    "\2\0\16\2\1\u01a7\6\2\1\0\33\2\2\0\2\2"+
    "\10\0\2\2\2\0\11\2\1\u01a8\13\2\1\0\33\2"+
    "\2\0\2\2\10\0\2\2\2\0\25\2\1\0\3\2"+
    "\1\u01a9\16\2\1\u01aa\10\2\2\0\2\2\10\0\2\2"+
    "\2\0\25\2\1\0\3\2\1\u01ab\27\2\2\0\2\2"+
    "\10\0\2\2\2\0\25\2\1\0\3\2\1\u01ac\27\2"+
    "\2\0\2\2\10\0\2\2\2\0\11\2\1\u01ad\13\2"+
    "\1\0\33\2\2\0\2\2\10\0\2\2\2\0\14\2"+
    "\1\u01a0\10\2\1\0\2\2\1\u01ae\30\2\2\0\2\2"+
    "\10\0\2\2\2\0\14\2\1\u01af\10\2\1\0\33\2"+
    "\2\0\2\2\10\0\2\2\2\0\1\u01b0\1\2\1\u01a4"+
    "\11\2\1\u01b1\10\2\1\0\1\u01a6\32\2\2\0\2\2"+
    "\10\0\2\2\2\0\17\2\1\u01a7\5\2\1\0\33\2"+
    "\2\0\2\2\10\0\2\2\2\0\13\2\1\u01b2\11\2"+
    "\1\0\33\2\2\0\2\2\10\0\2\2\2\0\17\2"+
    "\1\u01b3\5\2\1\0\33\2\2\0\2\2\10\0\2\2"+
    "\2\0\25\2\1\0\5\2\1\u01b4\16\2\1\u01b5\6\2"+
    "\2\0\2\2\10\0\2\2\2\0\25\2\1\0\5\2"+
    "\1\u01ab\25\2\2\0\2\2\10\0\2\2\2\0\25\2"+
    "\1\0\5\2\1\u01b6\25\2\2\0\2\2\10\0\2\2"+
    "\2\0\13\2\1\u01ad\11\2\1\0\33\2\2\0\2\2"+
    "\10\0\2\2\2\0\25\2\1\0\11\2\1\u01b7\21\2"+
    "\2\0\2\2\10\0\2\2\2\0\25\2\1\0\7\2"+
    "\1\u01b8\23\2\2\0\2\2\10\0\2\2\2\0\25\2"+
    "\1\0\13\2\1\u01b9\17\2\2\0\2\2\10\0\2\2"+
    "\2\0\14\2\1\u01ba\10\2\1\0\1\u01bb\32\2\2\0"+
    "\2\2\10\0\2\2\2\0\25\2\1\0\2\2\1\u01bc"+
    "\21\2\1\u01bd\6\2\2\0\2\2\10\0\2\2\2\0"+
    "\17\2\1\u01be\5\2\1\0\33\2\2\0\2\2\10\0"+
    "\2\2\2\0\25\2\1\0\3\2\1\u01bf\27\2\2\0"+
    "\2\2\10\0\2\2\2\0\25\2\1\0\14\2\1\u01c0"+
    "\16\2\2\0\2\2\10\0\2\2\2\0\15\2\1\u01c1"+
    "\5\2\1\u01bb\1\2\1\0\33\2\2\0\2\2\10\0"+
    "\2\2\2\0\25\2\1\0\1\2\1\u01c2\20\2\1\u01bd"+
    "\10\2\2\0\2\2\10\0\2\2\2\0\16\2\1\u01be"+
    "\6\2\1\0\33\2\2\0\2\2\10\0\2\2\2\0"+
    "\25\2\1\0\5\2\1\u01bf\25\2\2\0\2\2\10\0"+
    "\2\2\2\0\25\2\1\0\27\2\1\u01c3\3\2\2\0"+
    "\2\2\10\0\2\2\2\0\25\2\1\0\30\2\1\u01c4"+
    "\2\2\2\0\2\2\10\0\2\2\2\0\24\2\1\u01c5"+
    "\1\0\33\2\2\0\2\2\10\0\2\2\2\0\25\2"+
    "\1\0\33\2\1\u01c6\1\0\2\2\10\0\2\2\2\0"+
    "\22\2\1\u01c7\2\2\1\0\33\2\2\0\2\2\10\0"+
    "\2\2\2\0\11\2\1\u01c8\13\2\1\0\33\2\2\0"+
    "\2\2\10\0\2\2\2\0\16\2\1\u01c9\6\2\1\0"+
    "\33\2\2\0\2\2\10\0\2\2\2\0\17\2\1\u01ca"+
    "\5\2\1\0\33\2\2\0\2\2\10\0\2\2\2\0"+
    "\11\2\1\u01cb\13\2\1\0\33\2\2\0\2\2\10\0"+
    "\2\2\2\0\12\2\1\u01cc\12\2\1\0\33\2\2\0"+
    "\2\2\10\0\2\2\2\0\11\2\1\u01cd\13\2\1\0"+
    "\33\2\2\0\2\2\10\0\2\2\2\0\5\2\1\u01ce"+
    "\17\2\1\0\33\2\2\0\2\2\10\0\2\2\2\0"+
    "\13\2\1\u01cb\11\2\1\0\33\2\2\0\2\2\10\0"+
    "\2\2\2\0\13\2\1\u01cf\11\2\1\0\33\2\2\0"+
    "\2\2\10\0\2\2\2\0\10\2\1\u01cc\14\2\1\0"+
    "\33\2\2\0\2\2\10\0\2\2\2\0\2\2\1\u01ce"+
    "\22\2\1\0\33\2\2\0\2\2\10\0\2\2\2\0"+
    "\25\2\1\0\11\2\1\u01d0\21\2\2\0\2\2\10\0"+
    "\2\2\2\0\11\2\1\u01d1\13\2\1\0\33\2\2\0"+
    "\2\2\10\0\2\2\2\0\15\2\1\u01d2\7\2\1\0"+
    "\33\2\2\0\2\2\10\0\2\2\2\0\16\2\1\u01d3"+
    "\6\2\1\0\33\2\2\0\2\2\10\0\2\2\2\0"+
    "\11\2\1\u01d4\13\2\1\0\33\2\2\0\2\2\10\0"+
    "\2\2\2\0\25\2\1\0\1\2\1\u01d5\31\2\2\0"+
    "\2\2\10\0\2\2\2\0\25\2\1\0\22\2\1\u01d6"+
    "\10\2\2\0\2\2\10\0\2\2\2\0\16\2\1\u01d7"+
    "\6\2\1\0\33\2\2\0\2\2\10\0\2\2\2\0"+
    "\21\2\1\u01d8\3\2\1\0\33\2\2\0\2\2\10\0"+
    "\2\2\2\0\25\2\1\0\7\2\1\u01d9\23\2\2\0"+
    "\2\2\10\0\2\2\2\0\13\2\1\u01da\11\2\1\0"+
    "\33\2\2\0\2\2\10\0\2\2\2\0\14\2\1\u01db"+
    "\10\2\1\0\33\2\2\0\2\2\10\0\2\2\2\0"+
    "\17\2\1\u01dc\5\2\1\0\33\2\2\0\2\2\10\0"+
    "\2\2\2\0\13\2\1\u01d4\11\2\1\0\33\2\2\0"+
    "\2\2\10\0\2\2\2\0\25\2\1\0\2\2\1\u01dd"+
    "\30\2\2\0\2\2\10\0\2\2\2\0\25\2\1\0"+
    "\24\2\1\u01de\6\2\2\0\2\2\10\0\2\2\2\0"+
    "\17\2\1\u01df\5\2\1\0\33\2\2\0\2\2\10\0"+
    "\2\2\2\0\20\2\1\u01e0\4\2\1\0\33\2\2\0"+
    "\2\2\10\0\2\2\2\0\25\2\1\0\4\2\1\u01e1"+
    "\26\2\2\0\2\2\10\0\2\2\2\0\1\2\1\u01e2"+
    "\23\2\1\0\33\2\2\0\2\2\10\0\2\2\2\0"+
    "\1\u01e3\24\2\1\0\33\2\2\0\2\2\10\0\2\2"+
    "\2\0\25\2\1\0\4\2\1\u01e4\26\2\2\0\2\2"+
    "\10\0\2\2\2\0\15\2\1\u01e5\7\2\1\0\33\2"+
    "\2\0\2\2\10\0\2\2\2\0\25\2\1\0\23\2"+
    "\1\u01e6\7\2\2\0\2\2\10\0\2\2\2\0\25\2"+
    "\1\0\11\2\1\u01e7\21\2\2\0\2\2\10\0\2\2"+
    "\2\0\25\2\1\0\21\2\1\u01e8\11\2\2\0\2\2"+
    "\10\0\2\2\2\0\25\2\1\0\7\2\1\u01e7\23\2"+
    "\2\0\2\2\10\0\2\2\2\0\1\u01e9\24\2\1\0"+
    "\2\2\1\u01ea\30\2\2\0\2\2\10\0\2\2\2\0"+
    "\16\2\1\u01eb\6\2\1\0\33\2\2\0\2\2\10\0"+
    "\2\2\2\0\1\2\1\u01ec\23\2\1\0\1\2\1\u01ed"+
    "\31\2\2\0\2\2\10\0\2\2\2\0\17\2\1\u01ee"+
    "\5\2\1\0\33\2\2\0\2\2\10\0\2\2\2\0"+
    "\13\2\1\u01ef\11\2\1\0\33\2\2\0\2\2\10\0"+
    "\2\2\2\0\11\2\1\u01f0\13\2\1\0\33\2\2\0"+
    "\2\2\10\0\2\2\2\0\1\2\1\u01f1\23\2\1\0"+
    "\23\2\1\u01e6\7\2\2\0\2\2\10\0\2\2\2\0"+
    "\25\2\1\0\16\2\1\u01f2\14\2\2\0\2\2\10\0"+
    "\2\2\2\0\12\2\1\u01f3\12\2\1\0\33\2\2\0"+
    "\2\2\10\0\2\2\2\0\25\2\1\0\20\2\1\u01f4"+
    "\12\2\2\0\2\2\10\0\2\2\2\0\10\2\1\u01f3"+
    "\14\2\1\0\33\2\2\0\2\2\10\0\2\2\2\0"+
    "\4\2\1\u01f5\20\2\1\0\33\2\2\0\2\2\10\0"+
    "\2\2\2\0\7\2\1\u01f6\15\2\1\0\33\2\2\0"+
    "\2\2\10\0\2\2\2\0\25\2\1\0\25\2\1\u01f7"+
    "\5\2\2\0\2\2\10\0\2\2\2\0\25\2\1\0"+
    "\26\2\1\u01f8\4\2\2\0\2\2\10\0\2\2\2\0"+
    "\25\2\1\0\24\2\1\u01f9\6\2\2\0\2\2\10\0"+
    "\2\2\2\0\25\2\1\0\22\2\1\u01fa\10\2\2\0"+
    "\2\2\10\0\2\2\2\0\11\2\1\u01fb\4\2\1\u01fc"+
    "\6\2\1\0\33\2\2\0\2\2\10\0\2\2\2\0"+
    "\11\2\1\u01fd\13\2\1\0\33\2\2\0\2\2\10\0"+
    "\2\2\2\0\11\2\1\u01fe\13\2\1\0\33\2\2\0"+
    "\2\2\10\0\2\2\2\0\13\2\1\u01fb\3\2\1\u01ff"+
    "\5\2\1\0\33\2\2\0\2\2\10\0\2\2\2\0"+
    "\13\2\1\u0200\11\2\1\0\33\2\2\0\2\2\10\0"+
    "\2\2\2\0\13\2\1\u01fe\11\2\1\0\33\2\2\0"+
    "\2\2\10\0\2\2\2\0\1\2\1\u0201\23\2\1\0"+
    "\33\2\2\0\2\2\10\0\2\2\2\0\1\u0202\24\2"+
    "\1\0\33\2\2\0\2\2\10\0\2\2\2\0\11\2"+
    "\1\u0203\13\2\1\0\33\2\2\0\2\2\10\0\2\2"+
    "\2\0\13\2\1\u0204\11\2\1\0\13\2\1\u0205\17\2"+
    "\2\0\2\2\10\0\2\2\2\0\11\2\1\u0203\13\2"+
    "\1\0\14\2\1\u0206\16\2\2\0\2\2\10\0\2\2"+
    "\2\0\25\2\1\0\1\2\1\u0207\1\2\1\u0208\27\2"+
    "\2\0\2\2\10\0\2\2\2\0\11\2\1\u0209\13\2"+
    "\1\0\33\2\2\0\2\2\10\0\2\2\2\0\25\2"+
    "\1\0\2\2\1\u020a\2\2\1\u020b\25\2\2\0\2\2"+
    "\10\0\2\2\2\0\13\2\1\u020c\11\2\1\0\33\2"+
    "\2\0\2\2\10\0\2\2\2\0\15\2\1\u020d\7\2"+
    "\1\0\33\2\2\0\2\2\10\0\2\2\2\0\14\2"+
    "\1\u020e\10\2\1\0\33\2\2\0\2\2\10\0\2\2"+
    "\2\0\25\2\1\0\1\2\1\u020f\31\2\2\0\2\2"+
    "\10\0\2\2\2\0\2\2\1\u0210\12\2\1\u020d\7\2"+
    "\1\0\33\2\2\0\2\2\10\0\2\2\2\0\25\2"+
    "\1\0\2\2\1\u020f\30\2\2\0\2\2\10\0\2\2"+
    "\2\0\11\2\1\u0211\13\2\1\0\33\2\2\0\2\2"+
    "\10\0\2\2\2\0\25\2\1\0\1\2\1\u0212\31\2"+
    "\2\0\2\2\10\0\2\2\2\0\13\2\1\u0211\11\2"+
    "\1\0\33\2\2\0\2\2\10\0\2\2\2\0\25\2"+
    "\1\0\2\2\1\u0213\30\2\2\0\2\2\10\0\2\2"+
    "\2\0\3\2\1\u0214\21\2\1\0\33\2\2\0\2\2"+
    "\10\0\2\2\2\0\6\2\1\u0214\16\2\1\0\33\2"+
    "\2\0\2\2\10\0\2\2\2\0\1\u0215\1\2\1\u0216"+
    "\22\2\1\0\33\2\2\0\2\2\10\0\2\2\2\0"+
    "\1\2\1\u0217\3\2\1\u0216\17\2\1\0\33\2\2\0"+
    "\2\2\10\0\2\2\2\0\16\2\1\u0218\6\2\1\0"+
    "\33\2\2\0\2\2\10\0\2\2\2\0\25\2\1\0"+
    "\3\2\1\u0219\27\2\2\0\2\2\10\0\2\2\2\0"+
    "\24\2\1\u021a\1\0\33\2\2\0\2\2\10\0\2\2"+
    "\2\0\11\2\1\u021b\13\2\1\0\33\2\2\0\2\2"+
    "\10\0\2\2\2\0\5\2\1\u021c\17\2\1\0\33\2"+
    "\2\0\2\2\10\0\2\2\2\0\16\2\1\u021d\6\2"+
    "\1\0\33\2\2\0\2\2\10\0\2\2\2\0\25\2"+
    "\1\0\3\2\1\u021e\27\2\2\0\2\2\10\0\2\2"+
    "\2\0\17\2\1\u021f\5\2\1\0\33\2\2\0\2\2"+
    "\10\0\2\2\2\0\25\2\1\0\5\2\1\u0220\25\2"+
    "\2\0\2\2\10\0\2\2\2\0\22\2\1\u0221\2\2"+
    "\1\0\33\2\2\0\2\2\10\0\2\2\2\0\13\2"+
    "\1\u0222\11\2\1\0\33\2\2\0\2\2\10\0\2\2"+
    "\2\0\2\2\1\u021c\22\2\1\0\33\2\2\0\2\2"+
    "\10\0\2\2\2\0\17\2\1\u0223\5\2\1\0\33\2"+
    "\2\0\2\2\10\0\2\2\2\0\25\2\1\0\5\2"+
    "\1\u0224\25\2\2\0\2\2\10\0\2\2\2\0\10\2"+
    "\1\u0225\14\2\1\0\33\2\2\0\2\2\10\0\2\2"+
    "\2\0\12\2\1\u0225\12\2\1\0\33\2\2\0\2\2"+
    "\10\0\2\2\2\0\25\2\1\0\22\2\1\u0226\10\2"+
    "\2\0\2\2\10\0\2\2\2\0\25\2\1\0\1\2"+
    "\1\u0227\20\2\1\u0228\10\2\2\0\2\2\10\0\2\2"+
    "\2\0\25\2\1\0\24\2\1\u0229\6\2\2\0\2\2"+
    "\10\0\2\2\2\0\25\2\1\0\2\2\1\u022a\21\2"+
    "\1\u022b\6\2\2\0\2\2\10\0\2\2\2\0\16\2"+
    "\1\u022c\6\2\1\0\33\2\2\0\2\2\10\0\2\2"+
    "\2\0\25\2\1\0\3\2\1\u022d\27\2\2\0\2\2"+
    "\10\0\2\2\2\0\17\2\1\u022c\5\2\1\0\33\2"+
    "\2\0\2\2\10\0\2\2\2\0\25\2\1\0\5\2"+
    "\1\u022d\25\2\2\0\2\2\10\0\2\2\2\0\25\2"+
    "\1\0\3\2\1\u022e\27\2\2\0\2\2\10\0\2\2"+
    "\2\0\25\2\1\0\5\2\1\u022f\25\2\2\0\2\2"+
    "\10\0\2\2\2\0\12\2\1\u0230\12\2\1\0\33\2"+
    "\2\0\2\2\10\0\2\2\2\0\25\2\1\0\11\2"+
    "\1\u0231\21\2\2\0\2\2\10\0\2\2\2\0\11\2"+
    "\1\u0232\13\2\1\0\33\2\2\0\2\2\10\0\2\2"+
    "\2\0\25\2\1\0\1\2\1\u0233\31\2\2\0\2\2"+
    "\10\0\2\2\2\0\11\2\1\u0234\13\2\1\0\33\2"+
    "\2\0\2\2\10\0\2\2\2\0\11\2\1\u0235\13\2"+
    "\1\0\33\2\2\0\2\2\10\0\2\2\2\0\25\2"+
    "\1\0\4\2\1\u0236\20\2\1\u0237\5\2\2\0\2\2"+
    "\10\0\2\2\2\0\16\2\1\u0238\6\2\1\0\33\2"+
    "\2\0\2\2\10\0\2\2\2\0\11\2\1\u0239\13\2"+
    "\1\0\33\2\2\0\2\2\10\0\2\2\2\0\25\2"+
    "\1\0\7\2\1\u0231\23\2\2\0\2\2\10\0\2\2"+
    "\2\0\13\2\1\u0232\11\2\1\0\33\2\2\0\2\2"+
    "\10\0\2\2\2\0\25\2\1\0\2\2\1\u023a\30\2"+
    "\2\0\2\2\10\0\2\2\2\0\13\2\1\u0234\11\2"+
    "\1\0\33\2\2\0\2\2\10\0\2\2\2\0\13\2"+
    "\1\u0235\11\2\1\0\33\2\2\0\2\2\10\0\2\2"+
    "\2\0\10\2\1\u0230\14\2\1\0\33\2\2\0\2\2"+
    "\10\0\2\2\2\0\25\2\1\0\6\2\1\u023b\17\2"+
    "\1\u023c\4\2\2\0\2\2\10\0\2\2\2\0\17\2"+
    "\1\u023d\5\2\1\0\33\2\2\0\2\2\10\0\2\2"+
    "\2\0\13\2\1\u0239\11\2\1\0\33\2\2\0\2\2"+
    "\10\0\2\2\2\0\11\2\1\u023e\13\2\1\0\33\2"+
    "\2\0\2\2\10\0\2\2\2\0\13\2\1\u023f\11\2"+
    "\1\0\33\2\2\0\2\2\10\0\2\2\2\0\10\2"+
    "\1\u0240\14\2\1\0\33\2\2\0\2\2\10\0\2\2"+
    "\2\0\13\2\1\u0241\11\2\1\0\33\2\2\0\2\2"+
    "\10\0\2\2\2\0\13\2\1\u0242\11\2\1\0\33\2"+
    "\2\0\2\2\10\0\2\2\2\0\12\2\1\u0240\12\2"+
    "\1\0\33\2\2\0\2\2\10\0\2\2\2\0\11\2"+
    "\1\u0241\13\2\1\0\33\2\2\0\2\2\10\0\2\2"+
    "\2\0\11\2\1\u0242\13\2\1\0\33\2\2\0\2\2"+
    "\10\0\2\2\2\0\1\2\1\u0243\23\2\1\0\33\2"+
    "\2\0\2\2\10\0\2\2\2\0\1\u0244\24\2\1\0"+
    "\33\2\2\0\2\2\10\0\2\2\2\0\5\2\1\u0245"+
    "\17\2\1\0\33\2\2\0\2\2\10\0\2\2\2\0"+
    "\2\2\1\u0246\22\2\1\0\33\2\2\0\2\2\10\0"+
    "\2\2\2\0\25\2\1\0\1\2\1\u0247\31\2\2\0"+
    "\2\2\10\0\2\2\2\0\12\2\1\u0248\12\2\1\0"+
    "\33\2\2\0\2\2\10\0\2\2\2\0\10\2\1\u0249"+
    "\14\2\1\0\33\2\2\0\2\2\10\0\2\2\2\0"+
    "\25\2\1\0\3\2\1\u024a\27\2\2\0\2\2\10\0"+
    "\2\2\2\0\25\2\1\0\5\2\1\u024b\25\2\2\0"+
    "\2\2\10\0\2\2\2\0\25\2\1\0\3\2\1\u024c"+
    "\27\2\2\0\2\2\10\0\2\2\2\0\25\2\1\0"+
    "\3\2\1\u024d\27\2\2\0\2\2\10\0\2\2\2\0"+
    "\16\2\1\u024e\6\2\1\0\33\2\2\0\2\2\10\0"+
    "\2\2\2\0\12\2\1\u024f\12\2\1\0\33\2\2\0"+
    "\2\2\10\0\2\2\2\0\16\2\1\u0250\6\2\1\0"+
    "\33\2\2\0\2\2\10\0\2\2\2\0\5\2\1\u0251"+
    "\17\2\1\0\33\2\2\0\2\2\10\0\2\2\2\0"+
    "\24\2\1\u0252\1\0\33\2\2\0\2\2\10\0\2\2"+
    "\2\0\11\2\1\u0253\13\2\1\0\33\2\2\0\2\2"+
    "\10\0\2\2\2\0\25\2\1\0\5\2\1\u0254\25\2"+
    "\2\0\2\2\10\0\2\2\2\0\25\2\1\0\5\2"+
    "\1\u0255\25\2\2\0\2\2\10\0\2\2\2\0\17\2"+
    "\1\u024e\5\2\1\0\33\2\2\0\2\2\10\0\2\2"+
    "\2\0\10\2\1\u024f\14\2\1\0\33\2\2\0\2\2"+
    "\10\0\2\2\2\0\17\2\1\u0256\5\2\1\0\33\2"+
    "\2\0\2\2\10\0\2\2\2\0\2\2\1\u0251\22\2"+
    "\1\0\33\2\2\0\2\2\10\0\2\2\2\0\22\2"+
    "\1\u0257\2\2\1\0\33\2\2\0\2\2\10\0\2\2"+
    "\2\0\13\2\1\u0258\11\2\1\0\33\2\2\0\2\2"+
    "\10\0\2\2\2\0\11\2\1\u0259\13\2\1\0\33\2"+
    "\2\0\2\2\10\0\2\2\2\0\25\2\1\0\14\2"+
    "\1\u025a\16\2\2\0\2\2\10\0\2\2\2\0\25\2"+
    "\1\0\13\2\1\u025b\17\2\2\0\2\2\10\0\2\2"+
    "\2\0\11\2\1\u025c\13\2\1\0\33\2\2\0\2\2"+
    "\10\0\2\2\2\0\15\2\1\u025d\7\2\1\0\33\2"+
    "\2\0\2\2\10\0\2\2\2\0\4\2\1\u025e\20\2"+
    "\1\0\33\2\2\0\2\2\10\0\2\2\2\0\7\2"+
    "\1\u025f\15\2\1\0\33\2\2\0\2\2\10\0\2\2"+
    "\2\0\25\2\1\0\2\2\1\u0260\30\2\2\0\2\2"+
    "\10\0\2\2\2\0\25\2\1\0\1\u0261\32\2\2\0"+
    "\2\2\10\0\2\2\2\0\24\2\1\u0262\1\0\33\2"+
    "\2\0\2\2\10\0\2\2\2\0\25\2\1\0\1\2"+
    "\1\u0260\31\2\2\0\2\2\10\0\2\2\2\0\23\2"+
    "\1\u0263\1\2\1\0\33\2\2\0\2\2\10\0\2\2"+
    "\2\0\22\2\1\u0264\2\2\1\0\33\2\2\0\2\2"+
    "\10\0\2\2\2\0\25\2\1\0\6\2\1\u0265\24\2"+
    "\2\0\2\2\10\0\2\2\2\0\25\2\1\0\4\2"+
    "\1\u0266\26\2\2\0\2\2\10\0\2\2\2\0\1\2"+
    "\1\u0267\23\2\1\0\23\2\1\u0268\7\2\2\0\2\2"+
    "\10\0\2\2\2\0\15\2\1\u0269\7\2\1\0\33\2"+
    "\2\0\2\2\10\0\2\2\2\0\14\2\1\u026a\10\2"+
    "\1\0\33\2\2\0\2\2\10\0\2\2\2\0\16\2"+
    "\1\u026b\6\2\1\0\33\2\2\0\2\2\10\0\2\2"+
    "\2\0\17\2\1\u026c\5\2\1\0\33\2\2\0\2\2"+
    "\10\0\2\2\2\0\11\2\1\u026d\13\2\1\0\33\2"+
    "\2\0\2\2\10\0\2\2\2\0\13\2\1\u026d\11\2"+
    "\1\0\33\2\2\0\2\2\10\0\2\2\2\0\13\2"+
    "\1\u026e\11\2\1\0\33\2\2\0\2\2\10\0\2\2"+
    "\2\0\11\2\1\u026e\13\2\1\0\33\2\2\0\2\2"+
    "\10\0\2\2\2\0\12\2\1\u026f\12\2\1\0\33\2"+
    "\2\0\2\2\10\0\2\2\2\0\25\2\1\0\1\2"+
    "\1\u0270\31\2\2\0\2\2\10\0\2\2\2\0\10\2"+
    "\1\u026f\14\2\1\0\33\2\2\0\2\2\10\0\2\2"+
    "\2\0\25\2\1\0\2\2\1\u0270\30\2\2\0\2\2"+
    "\10\0\2\2\2\0\3\2\1\u0271\21\2\1\0\33\2"+
    "\2\0\2\2\10\0\2\2\2\0\6\2\1\u0272\16\2"+
    "\1\0\33\2\2\0\2\2\10\0\2\2\2\0\16\2"+
    "\1\u0273\6\2\1\0\33\2\2\0\2\2\10\0\2\2"+
    "\2\0\17\2\1\u0274\5\2\1\0\33\2\2\0\2\2"+
    "\10\0\2\2\2\0\25\2\1\0\20\2\1\u0275\12\2"+
    "\2\0\2\2\10\0\2\2\2\0\25\2\1\0\16\2"+
    "\1\u0276\14\2\2\0\2\2\10\0\2\2\2\0\11\2"+
    "\1\u0277\13\2\1\0\33\2\2\0\2\2\10\0\2\2"+
    "\2\0\25\2\1\0\3\2\1\u0278\27\2\2\0\2\2"+
    "\10\0\2\2\2\0\25\2\1\0\11\2\1\u0279\21\2"+
    "\2\0\2\2\10\0\2\2\2\0\13\2\1\u027a\11\2"+
    "\1\0\33\2\2\0\2\2\10\0\2\2\2\0\25\2"+
    "\1\0\5\2\1\u027b\25\2\2\0\2\2\10\0\2\2"+
    "\2\0\25\2\1\0\7\2\1\u027c\23\2\2\0\2\2"+
    "\10\0\2\2\2\0\11\2\1\u027d\13\2\1\0\33\2"+
    "\2\0\2\2\10\0\2\2\2\0\13\2\1\u027e\11\2"+
    "\1\0\33\2\2\0\2\2\10\0\2\2\2\0\6\2"+
    "\1\u027f\16\2\1\0\33\2\2\0\2\2\10\0\2\2"+
    "\2\0\11\2\1\u0280\13\2\1\0\33\2\2\0\2\2"+
    "\10\0\2\2\2\0\13\2\1\u0281\11\2\1\0\33\2"+
    "\2\0\2\2\10\0\2\2\2\0\25\2\1\0\5\2"+
    "\1\u0282\25\2\2\0\2\2\10\0\2\2\2\0\25\2"+
    "\1\0\3\2\1\u0283\27\2\2\0\2\2\10\0\2\2"+
    "\2\0\12\2\1\u0284\12\2\1\0\33\2\2\0\2\2"+
    "\10\0\2\2\2\0\5\2\1\u0285\17\2\1\0\33\2"+
    "\2\0\2\2\10\0\2\2\2\0\25\2\1\0\22\2"+
    "\1\u0286\10\2\2\0\2\2\10\0\2\2\2\0\25\2"+
    "\1\0\22\2\1\u0287\10\2\2\0\2\2\10\0\2\2"+
    "\2\0\1\2\1\u0288\23\2\1\0\33\2\2\0\2\2"+
    "\10\0\2\2\2\0\25\2\1\0\3\2\1\u0289\27\2"+
    "\2\0\2\2\10\0\2\2\2\0\10\2\1\u0284\14\2"+
    "\1\0\33\2\2\0\2\2\10\0\2\2\2\0\2\2"+
    "\1\u0285\22\2\1\0\33\2\2\0\2\2\10\0\2\2"+
    "\2\0\25\2\1\0\24\2\1\u028a\6\2\2\0\2\2"+
    "\10\0\2\2\2\0\25\2\1\0\24\2\1\u028b\6\2"+
    "\2\0\2\2\10\0\2\2\2\0\1\u028c\24\2\1\0"+
    "\33\2\2\0\2\2\10\0\2\2\2\0\25\2\1\0"+
    "\5\2\1\u028d\25\2\2\0\2\2\10\0\2\2\2\0"+
    "\25\2\1\0\11\2\1\u028e\21\2\2\0\2\2\10\0"+
    "\2\2\2\0\24\2\1\u028f\1\0\33\2\2\0\2\2"+
    "\10\0\2\2\2\0\16\2\1\u0290\6\2\1\0\33\2"+
    "\2\0\2\2\10\0\2\2\2\0\25\2\1\0\7\2"+
    "\1\u028e\23\2\2\0\2\2\10\0\2\2\2\0\22\2"+
    "\1\u0291\2\2\1\0\33\2\2\0\2\2\10\0\2\2"+
    "\2\0\17\2\1\u0292\5\2\1\0\33\2\2\0\2\2"+
    "\10\0\2\2\2\0\5\2\1\u0293\17\2\1\0\33\2"+
    "\2\0\2\2\10\0\2\2\2\0\2\2\1\u0293\22\2"+
    "\1\0\33\2\2\0\2\2\10\0\2\2\2\0\15\2"+
    "\1\u0294\7\2\1\0\33\2\2\0\2\2\10\0\2\2"+
    "\2\0\16\2\1\u0295\6\2\1\0\33\2\2\0\2\2"+
    "\10\0\2\2\2\0\11\2\1\u0296\13\2\1\0\33\2"+
    "\2\0\2\2\10\0\2\2\2\0\1\2\1\u0297\3\2"+
    "\1\u0298\17\2\1\0\33\2\2\0\2\2\10\0\2\2"+
    "\2\0\14\2\1\u0294\10\2\1\0\33\2\2\0\2\2"+
    "\10\0\2\2\2\0\17\2\1\u0299\5\2\1\0\33\2"+
    "\2\0\2\2\10\0\2\2\2\0\13\2\1\u0296\11\2"+
    "\1\0\33\2\2\0\2\2\10\0\2\2\2\0\1\u029a"+
    "\1\2\1\u0298\22\2\1\0\33\2\2\0\2\2\10\0"+
    "\2\2\2\0\25\2\1\0\1\2\1\u029b\31\2\2\0"+
    "\2\2\10\0\2\2\2\0\25\2\1\0\2\2\1\u029c"+
    "\30\2\2\0\2\2\10\0\2\2\2\0\25\2\1\0"+
    "\22\2\1\u029d\10\2\2\0\2\2\10\0\2\2\2\0"+
    "\25\2\1\0\24\2\1\u029e\6\2\2\0\2\2\10\0"+
    "\2\2\2\0\15\2\1\u029f\7\2\1\0\33\2\2\0"+
    "\2\2\10\0\2\2\2\0\14\2\1\u029f\10\2\1\0"+
    "\33\2\2\0\2\2\10\0\2\2\2\0\25\2\1\0"+
    "\17\2\1\u02a0\13\2\2\0\2\2\10\0\2\2\2\0"+
    "\11\2\1\u02a1\13\2\1\0\33\2\2\0\2\2\10\0"+
    "\2\2\2\0\13\2\1\u02a2\11\2\1\0\33\2\2\0"+
    "\2\2\10\0\2\2\2\0\25\2\1\0\4\2\1\u02a3"+
    "\26\2\2\0\2\2\10\0\2\2\2\0\25\2\1\0"+
    "\6\2\1\u02a3\24\2\2\0\2\2\10\0\2\2\2\0"+
    "\5\2\1\u02a4\17\2\1\0\33\2\2\0\2\2\10\0"+
    "\2\2\2\0\5\2\1\u02a5\17\2\1\0\33\2\2\0"+
    "\2\2\10\0\2\2\2\0\12\2\1\u02a6\12\2\1\0"+
    "\33\2\2\0\2\2\10\0\2\2\2\0\15\2\1\u02a7"+
    "\7\2\1\0\33\2\2\0\2\2\10\0\2\2\2\0"+
    "\25\2\1\0\1\2\1\u02a8\31\2\2\0\2\2\10\0"+
    "\2\2\2\0\2\2\1\u02a4\22\2\1\0\33\2\2\0"+
    "\2\2\10\0\2\2\2\0\2\2\1\u02a5\22\2\1\0"+
    "\33\2\2\0\2\2\10\0\2\2\2\0\10\2\1\u02a6"+
    "\14\2\1\0\33\2\2\0\2\2\10\0\2\2\2\0"+
    "\14\2\1\u02a9\10\2\1\0\33\2\2\0\2\2\10\0"+
    "\2\2\2\0\25\2\1\0\2\2\1\u02a8\30\2\2\0"+
    "\2\2\10\0\2\2\2\0\25\2\1\0\1\2\1\u02aa"+
    "\31\2\2\0\2\2\10\0\2\2\2\0\1\2\1\u02ab"+
    "\23\2\1\0\33\2\2\0\2\2\10\0\2\2\2\0"+
    "\1\u02ac\24\2\1\0\33\2\2\0\2\2\10\0\2\2"+
    "\2\0\25\2\1\0\1\2\1\u02ad\31\2\2\0\2\2"+
    "\10\0\2\2\2\0\25\2\1\0\23\2\1\u02ae\7\2"+
    "\2\0\2\2\10\0\2\2\2\0\16\2\1\u02af\6\2"+
    "\1\0\33\2\2\0\2\2\10\0\2\2\2\0\17\2"+
    "\1\u02b0\5\2\1\0\33\2\2\0\2\2\10\0\2\2"+
    "\2\0\1\u02b1\24\2\1\0\33\2\2\0\2\2\10\0"+
    "\2\2\2\0\1\2\1\u02b2\23\2\1\0\33\2\2\0"+
    "\2\2\10\0\2\2\2\0\1\2\1\u02b3\23\2\1\0"+
    "\33\2\2\0\2\2\10\0\2\2\2\0\1\u02b4\24\2"+
    "\1\0\33\2\2\0\2\2\10\0\2\2\2\0\7\2"+
    "\1\u02b5\15\2\1\0\33\2\2\0\2\2\10\0\2\2"+
    "\2\0\4\2\1\u02b6\20\2\1\0\33\2\2\0\2\2"+
    "\10\0\2\2\2\0\4\2\1\u02b7\20\2\1\0\33\2"+
    "\2\0\2\2\10\0\2\2\2\0\12\2\1\u02b8\12\2"+
    "\1\0\33\2\2\0\2\2\10\0\2\2\2\0\10\2"+
    "\1\u02b9\14\2\1\0\33\2\2\0\2\2\10\0\2\2"+
    "\2\0\1\2\1\u02ba\23\2\1\0\33\2\2\0\2\2"+
    "\10\0\2\2\2\0\1\u02bb\24\2\1\0\33\2\2\0"+
    "\2\2\10\0\2\2\2\0\4\2\1\u02bc\20\2\1\0"+
    "\33\2\2\0\2\2\10\0\2\2\2\0\7\2\1\u02bd"+
    "\15\2\1\0\33\2\2\0\2\2\10\0\2\2\2\0"+
    "\25\2\1\0\3\2\1\u02be\27\2\2\0\2\2\10\0"+
    "\2\2\2\0\25\2\1\0\5\2\1\u02bf\25\2\2\0"+
    "\2\2\10\0\2\2\2\0\25\2\1\0\5\2\1\u02c0"+
    "\25\2\2\0\2\2\10\0\2\2\2\0\25\2\1\0"+
    "\3\2\1\u02c1\27\2\2\0\2\2\10\0\2\2\2\0"+
    "\15\2\1\u02c2\7\2\1\0\33\2\2\0\2\2\10\0"+
    "\2\2\2\0\1\2\1\u02c3\23\2\1\0\33\2\2\0"+
    "\2\2\10\0\2\2\2\0\1\2\1\u02c4\23\2\1\0"+
    "\33\2\2\0\2\2\10\0\2\2\2\0\14\2\1\u02c5"+
    "\10\2\1\0\33\2\2\0\2\2\10\0\2\2\2\0"+
    "\1\u02c6\24\2\1\0\33\2\2\0\2\2\10\0\2\2"+
    "\2\0\1\u02c7\24\2\1\0\33\2\2\0\2\2\10\0"+
    "\2\2\2\0\25\2\1\0\3\2\1\u02c8\27\2\2\0"+
    "\2\2\10\0\2\2\2\0\25\2\1\0\5\2\1\u02c9"+
    "\25\2\2\0\2\2\10\0\2\2\2\0\7\2\1\u02ca"+
    "\15\2\1\0\33\2\2\0\2\2\10\0\2\2\2\0"+
    "\25\2\1\0\11\2\1\u02cb\21\2\2\0\2\2\10\0"+
    "\2\2\2\0\25\2\1\0\7\2\1\u02cc\23\2\2\0"+
    "\2\2\10\0\2\2\2\0\2\2\1\u02cd\22\2\1\0"+
    "\33\2\2\0\2\2\10\0\2\2\2\0\5\2\1\u02cd"+
    "\17\2\1\0\33\2\2\0\2\2\10\0\2\2\2\0"+
    "\16\2\1\u02ce\6\2\1\0\33\2\2\0\2\2\10\0"+
    "\2\2\2\0\16\2\1\u02cf\6\2\1\0\33\2\2\0"+
    "\2\2\10\0\2\2\2\0\25\2\1\0\22\2\1\u02d0"+
    "\10\2\2\0\2\2\10\0\2\2\2\0\11\2\1\u02d1"+
    "\13\2\1\0\33\2\2\0\2\2\10\0\2\2\2\0"+
    "\17\2\1\u02ce\5\2\1\0\33\2\2\0\2\2\10\0"+
    "\2\2\2\0\17\2\1\u02d2\5\2\1\0\33\2\2\0"+
    "\2\2\10\0\2\2\2\0\25\2\1\0\24\2\1\u02d3"+
    "\6\2\2\0\2\2\10\0\2\2\2\0\13\2\1\u02d4"+
    "\11\2\1\0\33\2\2\0\2\2\10\0\2\2\2\0"+
    "\25\2\1\0\3\2\1\u02d5\27\2\2\0\2\2\10\0"+
    "\2\2\2\0\12\2\1\u02d6\12\2\1\0\33\2\2\0"+
    "\2\2\10\0\2\2\2\0\25\2\1\0\5\2\1\u02d5"+
    "\25\2\2\0\2\2\10\0\2\2\2\0\10\2\1\u02d6"+
    "\14\2\1\0\33\2\2\0\2\2\10\0\2\2\2\0"+
    "\12\2\1\u02d7\12\2\1\0\33\2\2\0\2\2\10\0"+
    "\2\2\2\0\11\2\1\u02d8\13\2\1\0\33\2\2\0"+
    "\2\2\10\0\2\2\2\0\10\2\1\u02d7\14\2\1\0"+
    "\33\2\2\0\2\2\10\0\2\2\2\0\13\2\1\u02d9"+
    "\11\2\1\0\33\2\2\0\2\2\10\0\2\2\2\0"+
    "\25\2\1\0\4\2\1\u02da\26\2\2\0\2\2\10\0"+
    "\2\2\2\0\25\2\1\0\6\2\1\u02db\24\2\2\0"+
    "\2\2\10\0\2\2\2\0\25\2\1\0\10\2\1\u02dc"+
    "\22\2\2\0\2\2\10\0\2\2\2\0\25\2\1\0"+
    "\12\2\1\u02dc\20\2\2\0\2\2\10\0\2\2\2\0"+
    "\1\2\1\u02dd\23\2\1\0\33\2\2\0\2\2\10\0"+
    "\2\2\2\0\25\2\1\0\1\2\1\u02de\31\2\2\0"+
    "\2\2\10\0\2\2\2\0\25\2\1\0\2\2\1\u02de"+
    "\30\2\2\0\2\2\10\0\2\2\2\0\16\2\1\u02df"+
    "\6\2\1\0\33\2\2\0\2\2\10\0\2\2\2\0"+
    "\17\2\1\u02e0\5\2\1\0\33\2\2\0\2\2\10\0"+
    "\2\2\2\0\11\2\1\u02e1\13\2\1\0\33\2\2\0"+
    "\2\2\10\0\2\2\2\0\3\2\1\u02e2\21\2\1\0"+
    "\33\2\2\0\2\2\10\0\2\2\2\0\6\2\1\u02e3"+
    "\16\2\1\0\33\2\2\0\2\2\10\0\2\2\2\0"+
    "\11\2\1\u02e4\13\2\1\0\33\2\2\0\2\2\10\0"+
    "\2\2\2\0\11\2\1\u02e5\13\2\1\0\33\2\2\0"+
    "\2\2\10\0\2\2\2\0\13\2\1\u02e6\11\2\1\0"+
    "\33\2\2\0\2\2\10\0\2\2\2\0\25\2\1\0"+
    "\24\2\1\u02e7\6\2\2\0\2\2\10\0\2\2\2\0"+
    "\25\2\1\0\22\2\1\u02e8\10\2\2\0\2\2\10\0"+
    "\2\2\2\0\25\2\1\0\22\2\1\u02e9\10\2\2\0"+
    "\2\2\10\0\2\2\2\0\25\2\1\0\24\2\1\u02e8"+
    "\6\2\2\0\2\2\10\0\2\2\2\0\25\2\1\0"+
    "\5\2\1\u02ea\25\2\2\0\2\2\10\0\2\2\2\0"+
    "\25\2\1\0\3\2\1\u02eb\27\2\2\0\2\2\10\0"+
    "\2\2\2\0\25\2\1\0\22\2\1\u02ec\10\2\2\0"+
    "\2\2\10\0\2\2\2\0\11\2\1\u02ed\13\2\1\0"+
    "\33\2\2\0\2\2\10\0\2\2\2\0\13\2\1\u02ee"+
    "\11\2\1\0\33\2\2\0\2\2\10\0\2\2\2\0"+
    "\25\2\1\0\4\2\1\u02ef\26\2\2\0\2\2\10\0"+
    "\2\2\2\0\25\2\1\0\6\2\1\u02f0\24\2\2\0"+
    "\2\2\10\0\2\2\2\0\15\2\1\u02f1\7\2\1\0"+
    "\33\2\2\0\2\2\10\0\2\2\2\0\14\2\1\u02f1"+
    "\10\2\1\0\33\2\2\0\2\2\10\0\2\2\2\0"+
    "\5\2\1\u02f2\17\2\1\0\33\2\2\0\2\2\10\0"+
    "\2\2\2\0\2\2\1\u02f2\22\2\1\0\33\2\2\0"+
    "\2\2\10\0\2\2\2\0\2\2\1\u02f3\22\2\1\0"+
    "\33\2\2\0\2\2\10\0\2\2\2\0\5\2\1\u02f3"+
    "\17\2\1\0\33\2\2\0\2\2\10\0\2\2\2\0"+
    "\16\2\1\u02f4\6\2\1\0\33\2\2\0\2\2\10\0"+
    "\2\2\2\0\25\2\1\0\10\2\1\u02f5\22\2\2\0"+
    "\2\2\10\0\2\2\2\0\25\2\1\0\17\2\1\u02f6"+
    "\13\2\2\0\2\2\10\0\2\2\2\0\17\2\1\u02f7"+
    "\5\2\1\0\33\2\2\0\2\2\10\0\2\2\2\0"+
    "\25\2\1\0\12\2\1\u02f8\20\2\2\0\2\2\10\0"+
    "\2\2\2\0\25\2\1\0\15\2\1\u02f9\15\2\2\0"+
    "\2\2\10\0\2\2\2\0\25\2\1\0\4\2\1\u02fa"+
    "\26\2\2\0\2\2\10\0\2\2\2\0\25\2\1\0"+
    "\6\2\1\u02fa\24\2\2\0\2\2\10\0\2\2\2\0"+
    "\25\2\1\0\2\2\1\u02fb\30\2\2\0\2\2\10\0"+
    "\2\2\2\0\16\2\1\u02fc\6\2\1\0\33\2\2\0"+
    "\2\2\10\0\2\2\2\0\17\2\1\u02fd\5\2\1\0"+
    "\33\2\2\0\2\2\10\0\2\2\2\0\12\2\1\u02fe"+
    "\12\2\1\0\33\2\2\0\2\2\10\0\2\2\2\0"+
    "\25\2\1\0\10\2\1\u02ff\22\2\2\0\2\2\10\0"+
    "\2\2\2\0\25\2\1\0\22\2\1\u0300\10\2\2\0"+
    "\2\2\10\0\2\2\2\0\10\2\1\u02fe\14\2\1\0"+
    "\33\2\2\0\2\2\10\0\2\2\2\0\25\2\1\0"+
    "\12\2\1\u02ff\20\2\2\0\2\2\10\0\2\2\2\0"+
    "\25\2\1\0\24\2\1\u0301\6\2\2\0\2\2\10\0"+
    "\2\2\2\0\16\2\1\u0302\6\2\1\0\33\2\2\0"+
    "\2\2\10\0\2\2\2\0\17\2\1\u0303\5\2\1\0"+
    "\33\2\2\0\2\2\10\0\2\2\2\0\4\2\1\u0304"+
    "\20\2\1\0\33\2\2\0\2\2\10\0\2\2\2\0"+
    "\7\2\1\u0305\15\2\1\0\33\2\2\0\2\2\10\0"+
    "\2\2\2\0\3\2\1\u0306\21\2\1\0\33\2\2\0"+
    "\2\2\10\0\2\2\2\0\1\2\1\u0307\23\2\1\0"+
    "\33\2\2\0\2\2\10\0\2\2\2\0\1\u0308\24\2"+
    "\1\0\33\2\2\0\2\2\10\0\2\2\2\0\25\2"+
    "\1\0\22\2\1\u0309\10\2\2\0\2\2\10\0\2\2"+
    "\2\0\4\2\1\u030a\20\2\1\0\33\2\2\0\2\2"+
    "\10\0\2\2\2\0\7\2\1\u030b\15\2\1\0\33\2"+
    "\2\0\2\2\10\0\2\2\2\0\25\2\1\0\22\2"+
    "\1\u030c\10\2\2\0\2\2\10\0\2\2\2\0\25\2"+
    "\1\0\1\2\1\u030d\31\2\2\0\2\2\10\0\2\2"+
    "\2\0\25\2\1\0\2\2\1\u030d\30\2\2\0\2\2"+
    "\10\0\2\2\2\0\25\2\1\0\12\2\1\u030e\20\2"+
    "\2\0\2\2\10\0\2\2\2\0\25\2\1\0\10\2"+
    "\1\u030e\22\2\2\0\2\2\10\0\2\2\2\0\25\2"+
    "\1\0\5\2\1\u030f\25\2\2\0\2\2\10\0\2\2"+
    "\2\0\25\2\1\0\3\2\1\u0310\27\2\2\0\2\2"+
    "\10\0\2\2\2\0\25\2\1\0\3\2\1\u0311\27\2"+
    "\2\0\2\2\10\0\2\2\2\0\25\2\1\0\5\2"+
    "\1\u0312\25\2\2\0\2\2\10\0\2\2\2\0\4\2"+
    "\1\u0313\20\2\1\0\33\2\2\0\2\2\10\0\2\2"+
    "\2\0\7\2\1\u0314\15\2\1\0\33\2\2\0\2\2"+
    "\10\0\2\2\2\0\1\2\1\u0315\23\2\1\0\33\2"+
    "\2\0\2\2\10\0\2\2\2\0\11\2\1\u0316\13\2"+
    "\1\0\33\2\2\0\2\2\10\0\2\2\2\0\25\2"+
    "\1\0\3\2\1\u0317\27\2\2\0\2\2\10\0\2\2"+
    "\2\0\1\u0318\24\2\1\0\33\2\2\0\2\2\10\0"+
    "\2\2\2\0\13\2\1\u0319\11\2\1\0\33\2\2\0"+
    "\2\2\10\0\2\2\2\0\25\2\1\0\5\2\1\u031a"+
    "\25\2\2\0\2\2\10\0\2\2\2\0\12\2\1\u031b"+
    "\12\2\1\0\33\2\2\0\2\2\10\0\2\2\2\0"+
    "\10\2\1\u031b\14\2\1\0\33\2\2\0\2\2\10\0"+
    "\2\2\2\0\16\2\1\u031c\6\2\1\0\33\2\2\0"+
    "\2\2\10\0\2\2\2\0\17\2\1\u031c\5\2\1\0"+
    "\33\2\2\0\2\2\10\0\2\2\2\0\12\2\1\u031d"+
    "\12\2\1\0\33\2\2\0\2\2\10\0\2\2\2\0"+
    "\10\2\1\u031d\14\2\1\0\33\2\2\0\2\2\10\0"+
    "\2\2\2\0\25\2\1\0\3\2\1\u031e\27\2\2\0"+
    "\2\2\10\0\2\2\2\0\25\2\1\0\5\2\1\u031e"+
    "\25\2\2\0\2\2\10\0\2\2\2\0\25\2\1\0"+
    "\33\2\1\0\1\u031f\2\2\10\0\2\2\2\0\25\2"+
    "\1\0\14\2\1\u0320\16\2\2\0\2\2\10\0\2\2"+
    "\2\0\25\2\1\0\13\2\1\u0320\17\2\2\0\2\2"+
    "\10\0\2\2\2\0\16\2\1\u0321\6\2\1\0\33\2"+
    "\2\0\2\2\10\0\2\2\2\0\15\2\1\u0322\7\2"+
    "\1\0\33\2\2\0\2\2\10\0\2\2\2\0\14\2"+
    "\1\u0322\10\2\1\0\33\2\2\0\2\2\10\0\2\2"+
    "\2\0\16\2\1\u0323\6\2\1\0\33\2\2\0\2\2"+
    "\10\0\2\2\2\0\2\2\1\u0324\22\2\1\0\33\2"+
    "\2\0\2\2\10\0\2\2\2\0\5\2\1\u0324\17\2"+
    "\1\0\33\2\2\0\2\2\10\0\2\2\2\0\25\2"+
    "\1\0\4\2\1\u0325\26\2\2\0\2\2\10\0\2\2"+
    "\2\0\25\2\1\0\6\2\1\u0325\24\2\2\0\2\2"+
    "\10\0\2\2\2\0\25\2\1\0\3\2\1\u0326\27\2"+
    "\2\0\2\2\10\0\2\2\2\0\25\2\1\0\5\2"+
    "\1\u0326\25\2\2\0\2\2\10\0\2\2\2\0\25\2"+
    "\1\0\22\2\1\u0327\10\2\2\0\2\2\10\0\2\2"+
    "\2\0\25\2\1\0\22\2\1\u0328\10\2\2\0\2\2"+
    "\10\0\2\2\2\0\11\2\1\u0329\13\2\1\0\33\2"+
    "\2\0\2\2\10\0\2\2\2\0\25\2\1\0\24\2"+
    "\1\u032a\6\2\2\0\2\2\10\0\2\2\2\0\25\2"+
    "\1\0\24\2\1\u032b\6\2\2\0\2\2\10\0\2\2"+
    "\2\0\13\2\1\u0329\11\2\1\0\33\2\2\0\2\2"+
    "\77\0\1\u032c\11\0\2\2\2\0\25\2\1\0\7\2"+
    "\1\u032d\23\2\2\0\2\2\10\0\2\2\2\0\25\2"+
    "\1\0\10\2\1\u032e\22\2\2\0\2\2\10\0\2\2"+
    "\2\0\16\2\1\u032f\6\2\1\0\33\2\2\0\2\2"+
    "\10\0\2\2\2\0\25\2\1\0\12\2\1\u032e\20\2"+
    "\2\0\2\2\10\0\2\2\2\0\17\2\1\u032f\5\2"+
    "\1\0\33\2\2\0\2\2\20\0\1\u0330\70\0\2\2"+
    "\2\0\1\u0331\24\2\1\0\33\2\2\0\2\2\15\0"+
    "\1\u0332\73\0\2\2\2\0\25\2\1\0\6\2\1\u0333"+
    "\24\2\2\0\2\2\56\0\1\u0334\32\0\2\2\2\0"+
    "\25\2\1\0\6\2\1\u0335\24\2\2\0\2\2\60\0"+
    "\1\u0336\30\0\2\2\2\0\13\2\1\u0337\11\2\1\0"+
    "\33\2\2\0\2\2\45\0\1\u0338\43\0\2\2\2\0"+
    "\25\2\1\0\2\2\1\u0339\30\2\2\0\2\2\21\0"+
    "\1\u033a\67\0\2\2\2\0\13\2\1\u033b\11\2\1\0"+
    "\33\2\2\0\2\2\10\0\2\2\2\0\25\2\1\0"+
    "\24\2\1\u033c\6\2\2\0\2\2\10\0\2\2\2\0"+
    "\17\2\1\u0321\5\2\1\0\33\2\2\0\2\2\7\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[45630];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unkown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\0\2\1\1\11\52\1\7\11\3\1\1\0\2\1"+
    "\1\0\213\1\1\11\375\1\1\11\u0158\1\1\0\14\1"+
    "\1\0\3\1\1\0\1\1\1\0\1\1\1\0\1\1"+
    "\1\0\1\1\1\0\1\1\1\11\2\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[828];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;

  /* user code: */
    public String lexeme;
    public Tokens tipo;
    public Tokens traduccion;
  


  /**
   * Creates a new scanner
   * There is also a java.io.InputStream version of this constructor.
   *
   * @param   in  the java.io.Reader to read input from.
   */
  Lexer(java.io.Reader in) {
    this.zzReader = in;
  }

  /**
   * Creates a new scanner.
   * There is also java.io.Reader version of this constructor.
   *
   * @param   in  the java.io.Inputstream to read input from.
   */
  Lexer(java.io.InputStream in) {
    this(new java.io.InputStreamReader(in));
  }

  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x10000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 162) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzCurrentPos*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
    }

    /* finally: fill the buffer with new input */
    int numRead = zzReader.read(zzBuffer, zzEndRead,
                                            zzBuffer.length-zzEndRead);

    if (numRead > 0) {
      zzEndRead+= numRead;
      return false;
    }
    // unlikely but not impossible: read 0 characters, but not at end of stream    
    if (numRead == 0) {
      int c = zzReader.read();
      if (c == -1) {
        return true;
      } else {
        zzBuffer[zzEndRead++] = (char) c;
        return false;
      }     
    }

	// numRead < 0
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public Tokens yylex() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      boolean zzR = false;
      for (zzCurrentPosL = zzStartRead; zzCurrentPosL < zzMarkedPosL;
                                                             zzCurrentPosL++) {
        switch (zzBufferL[zzCurrentPosL]) {
        case '\u000B':
        case '\u000C':
        case '\u0085':
        case '\u2028':
        case '\u2029':
          yyline++;
          zzR = false;
          break;
        case '\r':
          yyline++;
          zzR = true;
          break;
        case '\n':
          if (zzR)
            zzR = false;
          else {
            yyline++;
          }
          break;
        default:
          zzR = false;
        }
      }

      if (zzR) {
        // peek one character ahead if it is \n (if we have counted one line too much)
        boolean zzPeek;
        if (zzMarkedPosL < zzEndReadL)
          zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        else if (zzAtEOF)
          zzPeek = false;
        else {
          boolean eof = zzRefill();
          zzEndReadL = zzEndRead;
          zzMarkedPosL = zzMarkedPos;
          zzBufferL = zzBuffer;
          if (eof) 
            zzPeek = false;
          else 
            zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        }
        if (zzPeek) yyline--;
      }
      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL)
            zzInput = zzBufferL[zzCurrentPosL++];
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = zzBufferL[zzCurrentPosL++];
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          int zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
        case 77: 
          { lexeme = yytext(); tipo=Sustantivo; traduccion= casa; return HOUSE;
          }
        case 151: break;
        case 114: 
          { lexeme=yytext();tipo=Pronombre;traduccion=mi; return MYSELF;
          }
        case 152: break;
        case 58: 
          { lexeme=yytext();tipo=Pro_demostrativo;traduccion=eso; return THAT;
          }
        case 153: break;
        case 81: 
          { lexeme=yytext();tipo=Adj_Indefinido;traduccion=cada; return EVERY;
          }
        case 154: break;
        case 19: 
          { lexeme=yytext();tipo=Pronombre;traduccion=soy; return AM;
          }
        case 155: break;
        case 98: 
          { lexeme=yytext();tipo=Adjetivo;traduccion=divertido; return FUNNY;
          }
        case 156: break;
        case 73: 
          { lexeme=yytext();tipo=Numeral;traduccion=nueve; return NINE;
          }
        case 157: break;
        case 52: 
          { lexeme=yytext();tipo=Adj_Indefinido;traduccion=alguno; return SOME;
          }
        case 158: break;
        case 5: 
          { lexeme=yytext();tipo=Articulo;traduccion=un; return A;
          }
        case 159: break;
        case 144: 
          { lexeme=yytext();tipo=Adj_Calificativo;traduccion=delicioso; return DELICIOUS;
          }
        case 160: break;
        case 127: 
          { lexeme=yytext();tipo=Pro_demostrativo;traduccion=otro; return ANOTHER;
          }
        case 161: break;
        case 76: 
          { lexeme=yytext();tipo=Pro_demostrativo;traduccion=otro; return OTHER;
          }
        case 162: break;
        case 86: 
          { lexeme=yytext();tipo= Num_Cardinales;traduccion=decimo; return TENTH;
          }
        case 163: break;
        case 38: 
          { lexeme=yytext();tipo= Pro_Interrog;traduccion=porque; return WHY;
          }
        case 164: break;
        case 49: 
          { lexeme = yytext(); tipo=Sustantivo; traduccion= bolígrafo; return PEN;
          }
        case 165: break;
        case 87: 
          { lexeme=yytext();tipo= Num_Cardinales;traduccion=tercero; return THIRD;
          }
        case 166: break;
        case 31: 
          { lexeme=yytext();tipo=Adj_Posesivos;traduccion=suyo; return HER;
          }
        case 167: break;
        case 71: 
          { lexeme = yytext(); tipo=Sustantivo; traduccion= libro;return BOOK;
          }
        case 168: break;
        case 23: 
          { lexeme=yytext();tipo=Adj_Posesivos;traduccion=es; return ITS;
          }
        case 169: break;
        case 109: 
          { lexeme=yytext();tipo=Adverbio;traduccion=lento; return SLOWLY;
          }
        case 170: break;
        case 74: 
          { lexeme=yytext();tipo=Adjetivo;traduccion=nombre; return NAME;
          }
        case 171: break;
        case 35: 
          { lexeme=yytext();tipo=Numeral;traduccion=diez; return TEN;
          }
        case 172: break;
        case 9: 
          { lexeme=yytext();tipo=Puntuacion;traduccion=abrpar; return nadaa;
          }
        case 173: break;
        case 135: 
          { lexeme=yytext();tipo=Adj_Calificativo;traduccion=emocionante; return EXCITING;
          }
        case 174: break;
        case 93: 
          { lexeme=yytext();tipo= Pro_Interrog;traduccion=cual; return WHICH;
          }
        case 175: break;
        case 143: 
          { lexeme=yytext();tipo=Pro_demostrativo;traduccion=diferente; return DIFFERENT;
          }
        case 176: break;
        case 92: 
          { lexeme = yytext(); tipo=Sustantivo; traduccion= mesa; return TABLE;
          }
        case 177: break;
        case 36: 
          { lexeme=yytext();tipo=Articulo;traduccion=el; return THE;
          }
        case 178: break;
        case 129: 
          { lexeme=yytext();tipo=Puntuacion;traduccion=puncom; return nadaa;
          }
        case 179: break;
        case 24: 
          { lexeme=yytext();tipo=Pronombre;traduccion=tu; return YOU;
          }
        case 180: break;
        case 140: 
          { lexeme=yytext();tipo= Num_Cardinales;traduccion=vigesimo; return TWENTIETH;
          }
        case 181: break;
        case 30: 
          { lexeme=yytext();tipo= Pro_Interrog;traduccion=como; return HOW;
          }
        case 182: break;
        case 134: 
          { lexeme=yytext();tipo= Num_Cardinales;traduccion=undecimo; return ELEVENTH;
          }
        case 183: break;
        case 146: 
          { lexeme = yytext();  tipo=Sustantivo; traduccion= estantería;return BOOKSHELF;
          }
        case 184: break;
        case 47: 
          { lexeme = yytext(); tipo=Sustantivo; traduccion=carro;return CAR;
          }
        case 185: break;
        case 123: 
          { lexeme=yytext();tipo=Adj_Indefinido;traduccion=varios; return SEVERAL;
          }
        case 186: break;
        case 150: 
          { lexeme=yytext();tipo=Adjetivo;traduccion=inteligente; return INTELLIGENT;
          }
        case 187: break;
        case 21: 
          { lexeme=yytext();tipo=Adj_Posesivos;traduccion=mio; return MY ;
          }
        case 188: break;
        case 8: 
          { lexeme=yytext();tipo=Puntuacion;traduccion=cerrin; return nadaa;
          }
        case 189: break;
        case 51: 
          { lexeme=yytext();tipo=Adverbio;traduccion=aqui; return HERE;
          }
        case 190: break;
        case 4: 
          { lexeme=yytext();tipo=Pronombre;traduccion=yo; return I;
          }
        case 191: break;
        case 101: 
          { lexeme=yytext();tipo=Adjetivo;traduccion=gruñon; return BRAVE;
          }
        case 192: break;
        case 107: 
          { lexeme=yytext();tipo=Numeral;traduccion=once; return ELEVEN;
          }
        case 193: break;
        case 3: 
          { return Linea;
          }
        case 194: break;
        case 82: 
          { lexeme=yytext();tipo= Num_Cardinales;traduccion=sexto; return SIXTH;
          }
        case 195: break;
        case 60: 
          { lexeme = yytext(); tipo=Sustantivo; traduccion= árbol; return TREE;
          }
        case 196: break;
        case 89: 
          { lexeme=yytext();tipo=Adj_Posesivos;traduccion=suyo; return THEIR;
          }
        case 197: break;
        case 131: 
          { lexeme=yytext();tipo=Adverbio;traduccion=tranquilamente; return QUIETLY;
          }
        case 198: break;
        case 120: 
          { lexeme=yytext();tipo=Numeral;traduccion=cien; return HUNDRED;
          }
        case 199: break;
        case 88: 
          { lexeme=yytext();tipo=Pro_demostrativo;traduccion=aquellos; return THOSE;
          }
        case 200: break;
        case 137: 
          { lexeme=yytext();tipo=Adj_Calificativo;traduccion=encantadora; return CHARMING;
          }
        case 201: break;
        case 40: 
          { lexeme=yytext();tipo=Pronombre;traduccion=son; return ARE;
          }
        case 202: break;
        case 29: 
          { lexeme=yytext();tipo=Pronombre;traduccion=el; return HIM;
          }
        case 203: break;
        case 115: 
          { lexeme=yytext();tipo=Adverbio;traduccion=fuerte; return LOUDLY;
          }
        case 204: break;
        case 79: 
          { lexeme=yytext();tipo=Adjetivo;traduccion=feliz; return HAPPY;
          }
        case 205: break;
        case 27: 
          { lexeme=yytext();tipo=Numeral;traduccion=uno; return ONE;
          }
        case 206: break;
        case 136: 
          { lexeme = yytext(); tipo=Sustantivo; traduccion= computadora; return COMPUTER;
          }
        case 207: break;
        case 78: 
          { lexeme = yytext(); tipo=Sustantivo; traduccion=hola; return HELLO;
          }
        case 208: break;
        case 44: 
          { lexeme=yytext();tipo=Adj_Indefinido;traduccion=pocos; return FEW;
          }
        case 209: break;
        case 61: 
          { lexeme=yytext();tipo= Pro_Interrog;traduccion=aquien; return WHOM;
          }
        case 210: break;
        case 132: 
          { lexeme=yytext();tipo=Adverbio;traduccion=rapidamente; return QUICKLY;
          }
        case 211: break;
        case 45: 
          { lexeme = yytext(); tipo=Sustantivo; traduccion=perro; return DOG;
          }
        case 212: break;
        case 72: 
          { lexeme=yytext();tipo=Adj_Indefinido;traduccion=ambos; return BOTH;
          }
        case 213: break;
        case 104: 
          { lexeme=yytext();tipo=Adverbio;traduccion=nunca; return NEVER;
          }
        case 214: break;
        case 113: 
          { lexeme=yytext();tipo=Adverbio;traduccion=siempre; return ALWAYS;
          }
        case 215: break;
        case 46: 
          { lexeme = yytext(); tipo=Sustantivo; traduccion= gato; return CAT;
          }
        case 216: break;
        case 62: 
          { lexeme=yytext();tipo= Pro_Interrog;traduccion=cuando; return WHEN;
          }
        case 217: break;
        case 80: 
          { lexeme=yytext();tipo=Numeral;traduccion=ocho; return EIGHT;
          }
        case 218: break;
        case 122: 
          { lexeme=yytext();tipo=Adjetivo;traduccion=elegante; return ELEGANT;
          }
        case 219: break;
        case 91: 
          { lexeme=yytext();tipo=Numeral;traduccion=tres; return THREE;
          }
        case 220: break;
        case 42: 
          { lexeme=yytext();tipo=Adj_Indefinido;traduccion=cualquier; return ANY;
          }
        case 221: break;
        case 48: 
          { lexeme=yytext();tipo=Adjetivo;traduccion=grande; return BIG;
          }
        case 222: break;
        case 105: 
          { lexeme=yytext();tipo= Num_Cardinales;traduccion=octavo; return EIGHTH;
          }
        case 223: break;
        case 22: 
          { lexeme=yytext();tipo=Pronombre;traduccion=mi; return ME;
          }
        case 224: break;
        case 96: 
          { lexeme=yytext();tipo= Num_Cardinales;traduccion=primero; return FIRST;
          }
        case 225: break;
        case 16: 
          { lexeme = yytext(); tipo=Sustantivo; traduccion=hola; return HI;
          }
        case 226: break;
        case 83: 
          { lexeme=yytext();tipo=Numeral;traduccion=siete; return SEVEN;
          }
        case 227: break;
        case 63: 
          { lexeme=yytext();tipo= Pro_Interrog;traduccion=que; return WHAT;
          }
        case 228: break;
        case 125: 
          { lexeme=yytext();tipo= Num_Cardinales;traduccion=duodecimo; return TWELFTH;
          }
        case 229: break;
        case 17: 
          { lexeme=yytext();tipo=Pronombre;traduccion=el; return HE;
          }
        case 230: break;
        case 103: 
          { lexeme=yytext();tipo= Num_Cardinales;traduccion=noveno; return NINTH;
          }
        case 231: break;
        case 12: 
          { lexeme=yytext();tipo=Puntuacion;traduccion=cerrllac; return nadaa;
          }
        case 232: break;
        case 66: 
          { lexeme=yytext();tipo=Adverbio;traduccion=mucho; return MUCH;
          }
        case 233: break;
        case 54: 
          { lexeme=yytext();tipo=Pro_demostrativo;traduccion=mismo; return SAME;
          }
        case 234: break;
        case 6: 
          { lexeme=yytext();tipo=Puntuacion;traduccion=punn; return nadaa;
          }
        case 235: break;
        case 67: 
          { lexeme=yytext();tipo=Adj_Indefinido;traduccion=muchos; return MANY;
          }
        case 236: break;
        case 32: 
          { lexeme=yytext();tipo=Numeral;traduccion=seis; return SIX;
          }
        case 237: break;
        case 133: 
          { lexeme=yytext();tipo=Pronombre;traduccion=tu; return YOURSELF;
          }
        case 238: break;
        case 57: 
          { lexeme=yytext();tipo=Pronombre;traduccion=ellos; return THEM;
          }
        case 239: break;
        case 116: 
          { lexeme=yytext();tipo=Adj_Calificativo;traduccion=hermoso; return LOVELY;
          }
        case 240: break;
        case 18: 
          { lexeme=yytext(); tipo=Pronombre;traduccion=nosotros; return WE;
          }
        case 241: break;
        case 25: 
          { lexeme=yytext();tipo=Adj_Posesivos;traduccion=nuestro; return OUR;
          }
        case 242: break;
        case 56: 
          { lexeme=yytext();tipo=Pronombre;traduccion=ellos; return THEY;
          }
        case 243: break;
        case 100: 
          { lexeme=yytext();tipo=Puntuacion;traduccion=comm; return nadaa;
          }
        case 244: break;
        case 126: 
          { lexeme=yytext();tipo=Adj_Calificativo;traduccion=asombroso; return AMAZING;
          }
        case 245: break;
        case 118: 
          { lexeme = yytext(); tipo=Sustantivo; traduccion= flor; return FLOWER;
          }
        case 246: break;
        case 148: 
          { lexeme=yytext();tipo=Adj_Calificativo;traduccion=increible; return INCREDIBLE;
          }
        case 247: break;
        case 99: 
          { lexeme = yytext(); tipo=Sustantivo; traduccion= silla; return CHAIR;
          }
        case 248: break;
        case 145: 
          { lexeme=yytext();tipo=Adverbio;traduccion=cuidadosamente; return CAREFULLY;
          }
        case 249: break;
        case 97: 
          { lexeme=yytext();tipo= Num_Cardinales;traduccion=quinto; return FIFTH;
          }
        case 250: break;
        case 20: 
          { lexeme=yytext();tipo=Articulo;traduccion=un; return AN;
          }
        case 251: break;
        case 34: 
          { lexeme=yytext();tipo=Pronombre;traduccion=ella; return SHE;
          }
        case 252: break;
        case 106: 
          { lexeme=yytext();tipo=Adverbio;traduccion=facilmente; return EASILY;
          }
        case 253: break;
        case 95: 
          { lexeme=yytext();tipo= Pro_Interrog;traduccion=donde; return WHERE;
          }
        case 254: break;
        case 139: 
          { lexeme=yytext();tipo=Adj_Calificativo;traduccion=excelente; return EXCELLENT;
          }
        case 255: break;
        case 68: 
          { lexeme=yytext();tipo=Numeral;traduccion=cinco; return FIVE;
          }
        case 256: break;
        case 69: 
          { lexeme=yytext();tipo=Numeral;traduccion=cuatro; return FOUR;
          }
        case 257: break;
        case 15: 
          { lexeme=yytext();tipo=Pronombre;traduccion=nosotros; return US;
          }
        case 258: break;
        case 55: 
          { lexeme=yytext();tipo=Pro_demostrativo;traduccion=este; return THIS;
          }
        case 259: break;
        case 14: 
          { lexeme=yytext();tipo=Pronombre; traduccion=eso; return IT;
          }
        case 260: break;
        case 1: 
          { lexeme=yytext(); return Error;
          }
        case 261: break;
        case 130: 
          { lexeme=yytext();tipo=Pro_demostrativo;traduccion=varios; return VARIOUS;
          }
        case 262: break;
        case 43: 
          { lexeme=yytext();tipo=Adjetivo;traduccion=rojo; return RED;
          }
        case 263: break;
        case 64: 
          { lexeme=yytext();tipo=Adverbio;traduccion=bueno; return WELL;
          }
        case 264: break;
        case 7: 
          { lexeme=yytext();tipo=Puntuacion;traduccion=cerrad; return nadaa;
          }
        case 265: break;
        case 108: 
          { lexeme=yytext();tipo= Num_Cardinales;traduccion=segundo; return SECOND;
          }
        case 266: break;
        case 117: 
          { lexeme=yytext();tipo= Num_Cardinales;traduccion=cuarto; return FOURTH;
          }
        case 267: break;
        case 37: 
          { lexeme=yytext();tipo=Numeral;traduccion=dos; return TWO;
          }
        case 268: break;
        case 53: 
          { lexeme=yytext();tipo=Pro_demostrativo;traduccion=semejante; return SUCH;
          }
        case 269: break;
        case 13: 
          { lexeme=yytext(); tipo=Pronombre;traduccion=es; return IS;
          }
        case 270: break;
        case 2: 
          { /*Ignore*/
          }
        case 271: break;
        case 102: 
          { lexeme = yytext(); tipo=Sustantivo; traduccion= teléfono; return PHONE;
          }
        case 272: break;
        case 110: 
          { lexeme=yytext();tipo=Adj_Posesivos;traduccion=suyo; return THEIRS;
          }
        case 273: break;
        case 112: 
          { lexeme=yytext();tipo=Numeral;traduccion=veinte; return TWENTY;
          }
        case 274: break;
        case 39: 
          { lexeme=yytext();tipo= Pro_Interrog;traduccion=quien; return WHO;
          }
        case 275: break;
        case 26: 
          { lexeme=yytext();tipo=Adjetivo;traduccion=viejo; return OLD;
          }
        case 276: break;
        case 70: 
          { lexeme=yytext();tipo=Adjetivo;traduccion=frio; return COLD;
          }
        case 277: break;
        case 142: 
          { lexeme=yytext();tipo=Adj_Calificativo;traduccion=fantastico; return FANTASTIC;
          }
        case 278: break;
        case 65: 
          { lexeme=yytext();tipo=Adj_Posesivos;traduccion=mio; return MINE;
          }
        case 279: break;
        case 75: 
          { lexeme=yytext();tipo=Adj_Posesivos;traduccion=tuyo; return YOURS;
          }
        case 280: break;
        case 33: 
          { lexeme = yytext(); tipo=Sustantivo; traduccion= sol; return SUN;
          }
        case 281: break;
        case 141: 
          { lexeme=yytext();tipo=Adj_Calificativo;traduccion=maravilloso; return WONDERFUL;
          }
        case 282: break;
        case 149: 
          { lexeme=yytext();tipo=Adj_Calificativo;traduccion=interesante; return INTERESTING;
          }
        case 283: break;
        case 147: 
          { lexeme=yytext();tipo=Adjetivo;traduccion=hermoso; return BEAUTIFUL;
          }
        case 284: break;
        case 124: 
          { lexeme=yytext();tipo= Num_Cardinales;traduccion=septimo; return SEVENTH;
          }
        case 285: break;
        case 11: 
          { lexeme=yytext();tipo=Puntuacion;traduccion=abrllac; return nadaa;
          }
        case 286: break;
        case 10: 
          { lexeme=yytext();tipo=Puntuacion;traduccion=cerrpar; return nadaa;
          }
        case 287: break;
        case 50: 
          { lexeme=yytext();tipo=Adj_Posesivos;traduccion=suyo; return YOUR;
          }
        case 288: break;
        case 119: 
          { lexeme=yytext();tipo=Puntuacion;traduccion=dospum; return nadaa;
          }
        case 289: break;
        case 94: 
          { lexeme=yytext();tipo= Pro_Interrog;traduccion=dequien; return WHOSE;
          }
        case 290: break;
        case 59: 
          { lexeme=yytext();tipo=Adjetivo;traduccion=alto; return TALL;
          }
        case 291: break;
        case 111: 
          { lexeme=yytext();tipo=Numeral;traduccion=doce; return TWELVE;
          }
        case 292: break;
        case 84: 
          { lexeme=yytext();tipo=Adjetivo;traduccion=inteligente; return SMART;
          }
        case 293: break;
        case 138: 
          { lexeme=yytext();tipo= Num_Cardinales;traduccion=centesima; return HUNDREDTH;
          }
        case 294: break;
        case 41: 
          { lexeme=yytext();tipo=Adj_Indefinido;traduccion=todo; return ALL;
          }
        case 295: break;
        case 28: 
          { lexeme=yytext();tipo=Adj_Posesivos;traduccion=suyo; return HIS;
          }
        case 296: break;
        case 90: 
          { lexeme=yytext();tipo=Pro_demostrativo;traduccion=estos; return THESE;
          }
        case 297: break;
        case 85: 
          { lexeme=yytext();tipo=Adjetivo;traduccion=pequeño; return SMALL;
          }
        case 298: break;
        case 121: 
          { lexeme=yytext();tipo=Adverbio;traduccion=felizmente; return HAPPILY;
          }
        case 299: break;
        case 128: 
          { lexeme=yytext();tipo=Pro_demostrativo;traduccion=cierto; return CERTAIN;
          }
        case 300: break;
        default: 
          if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
            zzAtEOF = true;
            return null;
          } 
          else {
            zzScanError(ZZ_NO_MATCH);
          }
      }
    }
  }


}
